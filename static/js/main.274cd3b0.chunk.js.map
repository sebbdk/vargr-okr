{"version":3,"sources":["store/okr.js","store/user.js","store/okr.actions.js","store/auth.js","store/index.js","lib/debounce.js","components/okr/parts/list-name.js","components/okr/parts/task-add.js","components/okr/parts/task.js","components/okr/parts/add-group.js","components/okr/parts/grouped-props.js","components/okr/parts/key-result.js","components/okr/parts/objective.js","components/okr/index.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["initialState","primaryObjective","keyResults","taskGroups","title","id","sort","tasks","nanoid","groupId","status","enabled","undefined","okrActions","updateTask","Symbol","addTask","updatePrimaryObjective","updateKeyResult","updateGroup","deleteTask","deleteGroup","addGroup","updateState","setAll","username","email","userActions","set","serialize","obj","str","p","hasOwnProperty","push","encodeURIComponent","join","rawTask","replace","dispatch","getState","a","originalTask","okr","filter","t","defaultFields","user","saveTask","okrtaskgroup","__v","task","type","fetch","method","headers","auth","jwt","body","req","console","error","reduce","acc","curr","order","tempTask","json","resTask","updateObjective","keyResult","index","moveTaskTo","taskId","state","t1","t2","find","splice","beforeVal","afterVal","length","updateListName","addGroupBefore","rawGroup","beforeId","beforeGroup","g","groups","deleted","beforeGroupIndex","indexOf","postVal","prevVal","saveGroup","tempGroup","group","resGroup","closeGroup","originalGroup","synchronizeMe","useCache","res","okrtasks","map","i","_id","okrtaskgroups","data","getGroupedTasks","ta","tb","groupIds","backlogTasks","g1","g2","authActions","login","password","loginAndSync","synchronizeTasks","rootReducer","combineReducers","action","composeEnhancers","composeWithDevTools","store","createStore","ls","localStorage","getItem","JSON","parse","getLocalStorageState","applyMiddleware","thunk","subscribe","setItem","stringify","debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","OkrListName","onChange","onClose","value","debouncedCalueChanged","val","className","defaultValue","evt","target","placeholder","onClick","window","confirm","OkrTaskAdd","onComplete","currentValue","aria-label","role","onKeyPress","charCode","onKeyUp","mapStateToProps","currentlyDraggin","draggin","OkrTask","props","domRef","React","createRef","disabled","changed","debouncedChange","ref","onDoubleClick","elm","currentTarget","focus","readOnly","onBlur","onKeyDown","key","defaultChecked","checked","onWaste","Component","connect","bindActionCreators","OkrAddGroup","onAdd","groupedTasks","onDragEnd","result","destination","draggableId","droppableId","provided","snapshot","droppableProps","innerRef","style","isDraggingOver","background","item","draggableProps","dragHandleProps","updatedTask","newTask","OkrKeyResult","valueChanged","Objective","objective","onObjectiveChange","onKeyResultChange","onAddKeyResult","keyResultJsx","kr","prompt","promptLogin","App","src","logo","alt","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.274cd3b0.chunk.js","sourcesContent":["import nanoid from 'nanoid';\n\nexport const initialState = {\n    primaryObjective: 'Finish projects & improve skillset',\n    keyResults: [\n        'Complete Math C',\n        'Complete 4 projects',\n        'Get detailed gold trading data for last 5 years'\n    ],\n    taskGroups: [\n        { title: 'Current sprint!', id: 1, sort: 0 },\n        { title: 'Some future sprint!', id: 2, sort: 1 }\n    ],\n    tasks: [\n        // add sort row...\n        { id: nanoid(), sort: 1, title: '[OKR Sys] Add group', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 2, title: '[OKR Sys] Close group', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 3, title: '[OKR Sys] Drag tasks', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 4, title: '[OKR Sys] Drop tasks into different sprint and sort', groupId: 1, status: 0, enabled: false },\n        { id: nanoid(), sort: 5, title: '[OKR Sys] Delete tasks', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 6, title: '[OKR Sys] Add tasks', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 7, title: '[OKR Sys] Basic state', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 8, title: '[OKR Sys] Basic UI', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 9, title: '[OKR Sys] Basic task behavior', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 10, title: '[OKR Sys] Save state to localstorage', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 11, title: '[OKR Sys] Deploy to Github page', groupId: 1, status: 1, enabled: false },\n\n        { id: nanoid(), sort: 12, title: 'Sign up for Math C', groupId: 2, status: 0, enabled: false },\n        { id: nanoid(), sort: 13, title: 'Read up on first math module', groupId: 2, status: 0, enabled: false },\n        { id: nanoid(), sort: 14, title: 'GBZ audio wiring', groupId: 2, status: 0, enabled: false },\n        { id: nanoid(), sort: 15, title: 'Gift for the lady', groupId: 2, status: 1, enabled: false },\n\n        { id: nanoid(), sort: 16, title: 'some task ÆØÅ', groupId: undefined, status: 0, enabled: false },\n        { id: nanoid(), sort: 17, title: 'some task ÆØÅ', groupId: undefined, status: 0, enabled: false },\n    ]\n}\n\nexport const okrActions = {\n    updateTask: Symbol('Update task'),\n    addTask: Symbol('Add task'),\n    updatePrimaryObjective: Symbol('Update primary objective'),\n    updateKeyResult: Symbol('Update key result'),\n    updateGroup: Symbol('Update group'),\n    deleteTask: Symbol('Delete task'),\n    deleteGroup: Symbol('Delete group'),\n    addGroup: Symbol('Add group'),\n    updateState: Symbol('update state'),\n    setAll: Symbol('set tasks'),\n}\n\nexport const okr = (state = { ...initialState }, action) => {\n    switch(action.type) {\n        case okrActions.setAll: {\n            return {\n                ...state,\n                ...action.data\n            }\n        }\n\n        case okrActions.updateKeyResult: {\n            const keyResults = [ ...state.keyResults ];\n            keyResults[action.index] = action.keyResult;\n            return {\n                ...state,\n                keyResults\n            }\n        }\n        case okrActions.updateGroup: {\n            const taskGroups = state.taskGroups.map(g => {\n                if (g.id === action.group.id) {\n                    if (action.replace === true) {\n                        return action.group\n                    } else {\n                        return {...g, ...action.group};\n                    }\n                }\n\n                return g;\n            });\n\n            return {\n                ...state,\n                taskGroups\n            }\n        }\n        case okrActions.addGroup: {\n            return {\n                ...state,\n                taskGroups: [\n                    ...state.taskGroups,\n                    {\n                        id: action.group.id ? action.group.id : nanoid(),\n                        ...action.group\n                    }\n                ]\n            }\n        }\n        case okrActions.deleteGroup: {\n            return {\n                ...state,\n                taskGroups: state.taskGroups.filter(g => g.id !== action.id)\n            }\n        }\n        case okrActions.updatePrimaryObjective: {\n            return {\n                ...state,\n                primaryObjective: action.primaryObjective\n            }\n        }\n        case okrActions.deleteTask: {\n            return {\n                ...state,\n                tasks: state.tasks.filter(t => t.id !== action.id)\n            }\n        }\n        case okrActions.updateState: {\n            return {\n                ...state,\n                ...action.state\n            }\n        }\n        case okrActions.updateTask: {\n            const tasks = state.tasks.map(t => {\n                if (t.id === action.task.id) {\n                    if (action.replace === true) {\n                        return action.task\n                    } else {\n                        return {...t, ...action.task};\n                    }\n                }\n\n                return t;\n            });\n\n            return {\n                ...state,\n                tasks\n            }\n        }\n        case okrActions.addTask: {\n            const tasks = [\n                ...state.tasks,\n                {\n                    groupId: undefined,\n                    status: 0,\n                    ...action.task,\n                    id: action.task.id ? action.task.id : nanoid(),\n                    sort: state.tasks.reduce((acc,curr)=> curr.sort > acc ? curr.sort:acc, 0)+1\n                }\n            ];\n\n            return {\n                ...state,\n                tasks\n            }\n        }\n        default:{\n            return state;\n        }\n    }\n}","export const initialState = {\n    id: undefined,\n    username: undefined,\n    email: undefined\n}\n\nexport const userActions = {\n    set: Symbol('set user')\n}\n\nexport function updateUser(state) {\n    return { type: userActions.set, state};\n}\n\nexport const user = (state = { ...initialState }, action) => {\n    switch(action.type) {\n        case userActions.set: {\n            return {\n                ...state,\n                ...action.state\n            }\n        }\n        default:{\n            return state;\n        }\n    }\n}","import nanoid from 'nanoid';\nimport { okrActions } from \"./okr\";\nimport { userActions } from './user';\n\nexport const serialize = function(obj) {\n    var str = [];\n    for (var p in obj)\n      if (obj.hasOwnProperty(p)) {\n        str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n      }\n    return str.join(\"&\");\n  }\n\nexport function updateTask(rawTask, replace = false) {\n    return async (dispatch, getState) => {\n        const originalTask = getState().okr.tasks.filter(t => t.id === rawTask.id);\n        const defaultFields = {status: 0, sort: 0, title:'', user: getState().user.id}\n        const saveTask = { ...defaultFields, ...rawTask, okrtaskgroup: rawTask.groupId, __v: 0, id: \"5d6994b3f236585b2605158f\" };\n\n        if(saveTask.okrtaskgroup === undefined || saveTask.okrtaskgroup === -1) {\n            delete saveTask.okrtaskgroup\n        }\n\n        const task = {\n            id: rawTask.id,\n            title: rawTask.title,\n            status: rawTask.status,\n            sort: rawTask.sort,\n            groupId: rawTask.groupId\n        }\n\n        dispatch({ type: okrActions.updateTask, task, replace });\n\n        const req = await fetch(`https://strapi.sebb.dk/okrtasks/${rawTask.id}`, {\n            method: 'put',\n            headers: {\n                'Authorization': 'Bearer ' + getState().auth.jwt,\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: serialize(saveTask)\n        });\n\n        if (req.status !== 200) {\n            dispatch({ type: okrActions.updateTask, task: originalTask, replace: true });\n            console.error('Update task failed', req)\n        }\n    }\n}\n\nexport function addTask(rawTask) {\n    return async (dispatch, getState) => {\n        const sort = getState().okr.tasks.reduce((acc, curr) => {\n                return curr.sort > acc ? curr.sort : acc;\n        }, 0) + 1;\n        const defaultFields = { order: 0, status: 0, title:'', sort: 0, user: getState().user.id };\n        const saveTask = { ...defaultFields, ...rawTask, okrtaskgroup: rawTask.groupId, sort };\n\n        const tempTask = {  ...saveTask, id: nanoid() }\n\n        dispatch({ type: okrActions.addTask, task: tempTask });\n\n        delete saveTask.groupId\n        if(saveTask.okrtaskgroup === undefined || saveTask.okrtaskgroup === -1) {\n            delete saveTask.okrtaskgroup\n        }\n\n        const req = await fetch('https://strapi.sebb.dk/okrtasks', {\n            method: 'post',\n            headers: {\n                'Authorization': 'Bearer ' + getState().auth.jwt,\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: serialize(saveTask)\n        });\n\n        const resTask = await req.json();\n        const task = {\n            id: resTask.id,\n            title: resTask.title,\n            status: resTask.status,\n            groupId: resTask.okrtaskgroup ? resTask.okrtaskgroup.id : undefined,\n            sort\n        }\n\n        if (req.status === 200) {\n            dispatch({ type: okrActions.deleteTask, id: tempTask.id });\n            dispatch({ type: okrActions.addTask, task });\n        } else {\n            console.error('Update task failed', req)\n        }\n    }\n}\n\nexport function updateObjective(primaryObjective) {\n    return { type: okrActions.updatePrimaryObjective, primaryObjective };\n}\n\nexport function updateKeyResult(keyResult, index) {\n    return { type: okrActions.updateKeyResult, keyResult, index };\n}\n\nexport function moveTaskTo(taskId, index, groupId) {\n    groupId = groupId !== -1 ? groupId:undefined;\n\n    return async (dispatch, getState) => {\n        const state = getState();\n        const tasks = state.okr.tasks\n            .filter(t => t.groupId === groupId)\n            .filter(t => t.id !== taskId)\n            .sort((t1,t2) => t1.sort < t2.sort ? -1 : 1);\n\n\n        const task = state.okr.tasks.find(t => t.id === taskId);\n\n        tasks.splice(index, 0, task)\n        const beforeVal = tasks[index-1] ? tasks[index-1].sort : tasks[0].sort-1;\n        const afterVal  = tasks[index+1] ? tasks[index+1].sort : tasks[tasks.length-1].sort+1;\n\n        const sort = beforeVal + ((afterVal - beforeVal) / 2);\n\n        updateTask({\n            ...task,\n            sort,\n            groupId\n        })(dispatch, getState);\n    }\n}\n\nexport function updateListName(title, id) {\n    return (dispatch, getState) => {\n        updateGroup({ id, title })(dispatch, getState);\n    }\n}\n\nexport function deleteTask(id) {\n    return async (dispatch, getState) => {\n        const tempTask = getState().okr.tasks.find(t => t.id === id);\n        dispatch({ type: okrActions.deleteTask, id });\n\n        const req = await fetch(`https://strapi.sebb.dk/okrtasks/${id}`, {\n            method: 'delete',\n            headers: { 'Authorization': 'Bearer ' + getState().auth.jwt, }\n        });\n\n        if (req.status !== 200) {\n            dispatch({ type: okrActions.addTask, task: tempTask });\n            console.error('Update task failed', req)\n        }\n    }\n}\n\nexport function addGroupBefore(rawGroup, beforeId) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        let sort = 0;\n \n        // Figure out sort value\n        const beforeGroup = state.okr.taskGroups.find(g => g.id === beforeId);\n        if(beforeGroup !== undefined) {\n            const groups = state.okr.taskGroups.filter(g => !g.deleted);\n            const beforeGroupIndex = groups.indexOf(beforeGroup);\n            const postVal = beforeGroup.sort;\n            const prevVal = groups[beforeGroupIndex-1] ? groups[beforeGroupIndex-1].sort : postVal-1;\n            sort = prevVal + ((postVal - prevVal) / 2);\n        }\n\n        const saveGroup = { ...rawGroup, sort, user: getState().user.id };\n        const tempGroup = {  ...saveGroup, id: nanoid() }\n\n        dispatch({ type: okrActions.addGroup, group: tempGroup });\n\n        const req = await fetch('https://strapi.sebb.dk/okrtaskgroups', {\n            method: 'post',\n            headers: {\n                'Authorization': 'Bearer ' + getState().auth.jwt,\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: serialize(saveGroup)\n        });\n\n        const resGroup = await req.json();\n        const group = {\n            id: resGroup.id,\n            title: resGroup.title,\n            sort: resGroup.sort\n        }\n\n        if (req.status === 200) {\n            dispatch({ type: okrActions.deleteGroup, id: tempGroup.id });\n            dispatch({ type: okrActions.addGroup, group });\n        } else {\n            console.error('add group failed', req)\n        }\n    }\n}\n\nexport function closeGroup(id) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const group = { ...state.okr.taskGroups.find(g => g.id === id), deleted: true };\n        updateGroup(group)(dispatch, getState);\n    }\n}\n\nexport function updateGroup(group) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const originalGroup = state.okr.taskGroups.find(g => g.id === group.id);\n\n        dispatch({ type: okrActions.updateGroup, group})\n\n        const req = await fetch(`https://strapi.sebb.dk/okrtaskgroups/${group.id}`, {\n            method: 'put',\n            headers: {\n                'Authorization': 'Bearer ' + state.auth.jwt,\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: serialize(group)\n        });\n\n        if (req.status !== 200) {\n            dispatch({ type: okrActions.updateGroup, group: originalGroup, replace: true})\n            console.error('add group failed', req);\n            return false;\n        }\n\n        return true;\n    }\n}\n\nexport function updateState(state) {\n    return { type: okrActions.updateState, state};\n}\n\nexport function synchronizeMe(useCache = true) {\n    return async (dispatch, getState) => {\n        if (useCache && getState().user.id !== undefined) {\n            return;\n        }\n\n        const req = await fetch('https://strapi.sebb.dk/users/me', {\n            method: 'get',\n            headers: {\n                'Authorization': 'Bearer ' + getState().auth.jwt\n            }\n        });\n\n        const res = await req.json();\n\n        const tasks = res.okrtasks.map(i => ({\n            id: i._id,\n            title: i.title,\n            groupId: i.okrtaskgroup,\n            status: i.status,\n            sort: i.sort\n        }));\n\n        const taskGroups = res.okrtaskgroups.filter(g => !g.deleted).map(i => ({\n            id: i._id,\n            title: i.title,\n            deleted: i.deleted,\n            sort: i.sort\n        }));\n\n        dispatch({ type: userActions.set, state: { id: res._id, username: res.username, email: res.email }});\n        dispatch({ type: okrActions.setAll, data: { tasks, taskGroups } });\n    }\n}\n\nexport function synchronizeTasks() {\n    return async (dispatch, getState) => {\n        await synchronizeMe()(dispatch, getState);\n\n        const res = await (await fetch(`https://strapi.sebb.dk/okrtasks?user=${getState().user.id}`, {\n            method: 'get',\n            headers: {\n                'Authorization': 'Bearer ' + getState().auth.jwt\n            }\n        })).json();\n\n        const tasks = res.map(i => ({\n            id: i._id,\n            title: i.title,\n            groupId: i.okrtaskgroup ? i.okrtaskgroup._id : undefined,\n            status: i.status,\n            sort: i.sort\n        }));\n\n        dispatch({ type: okrActions.setAll, data: { tasks } });\n    }\n}\n\nexport function synchronizeIfAuthenticated() {\n    return async (dispatch, getState) => {\n        if(getState().auth.user) {\n            synchronizeMe()(dispatch, getState);\n        }\n    }\n}\n\nexport const getGroupedTasks = (state) => {\n    const groups = state.okr.taskGroups\n        .filter(g => g.deleted !== true)\n        .map((group) => {\n            const tasks = state.okr.tasks\n                .filter(task => task.groupId === group.id)\n                .sort((ta, tb) => ta.sort > tb.sort ? 1:-1 );\n            return { ...group,  tasks}\n        });\n\n    const groupIds = state.okr.taskGroups.map(g => g.id);\n\n    const backlogTasks = state.okr.tasks\n        .filter(t => groupIds.indexOf(t.groupId) === -1)\n        .filter(t => t.status === 0)\n        .sort((ta, tb) => ta.sort > tb.sort ? 1 : -1 );\n\n    groups.push({ title: 'Backlog tasks', tasks: backlogTasks })\n\n    return groups.sort((g1, g2) => g1.sort < g2.sort ? -1 : 1);\n}","import { synchronizeMe, synchronizeTasks } from \"./okr.actions\";\n\nexport const authActions = {\n    set: Symbol('set auth state')\n}\n\nexport function login(username, password) {\n    return async (dispatch, getState) => {\n        const req = await fetch('https://strapi.sebb.dk/auth/local', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: `identifier=${username}&password=${password}`\n        });\n\n        const res = await req.json();\n\n        dispatch({\n            type: authActions.set,\n            state: {\n                jwt: res.jwt\n            }\n        });\n    }\n}\n\nexport function loginAndSync(username, password) {\n    return async (dispatch, getState) => {\n        await login(username, password)(dispatch, getState);\n        await synchronizeMe()(dispatch, getState);\n        await synchronizeTasks()(dispatch, getState);\n    }\n}\n\nexport const initialState = {}\n\nexport const auth = (state = { ...initialState }, action) => {\n    switch(action.type) {\n        case authActions.set: {\n            return {\n                ...state,\n                ...action.state\n            };\n        }\n        default:\n            return state;\n    }\n\n}","import { combineReducers, createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { okr } from './okr';\nimport { auth } from './auth';\nimport { user } from './user';\nimport { synchronizeIfAuthenticated } from './okr.actions';\n\nexport const rootReducer = combineReducers({\n    okr,\n    auth,\n    user\n})\n\nconst composeEnhancers = composeWithDevTools({\n    serialize: true\n});\n\nfunction getLocalStorageState() {\n    const ls = localStorage.getItem('okr');\n    return ls ? JSON.parse(ls) : {};\n}\n\nexport const store = createStore(rootReducer, getLocalStorageState(), composeEnhancers(\n    applyMiddleware(thunk),\n    // other store enhancers if any\n));\n\nstore.subscribe(state => {\n    localStorage.setItem('okr', JSON.stringify(store.getState()));\n});\n\nstore.dispatch(synchronizeIfAuthenticated());\n","export function debounce(func, wait, immediate) {\n\tvar timeout;\n\treturn function() {\n\t\tvar context = this, args = arguments;\n\t\tvar later = function() {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) func.apply(context, args);\n\t\t};\n\t\tvar callNow = immediate && !timeout;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t\tif (callNow) func.apply(context, args);\n\t};\n};","import React from 'react'\nimport { debounce } from '../../../lib/debounce';\n\nconst OkrListName = ({ onChange, onClose, value }) => {\n  const debouncedCalueChanged = debounce((val) => {\n    onChange && onChange(val);\n  }, 500);\n\n  function add() {\n    if(window.confirm(\"Are you sure?\")) {\n      onClose();\n    }\n  }\n\n  return (\n    <div className=\"okr-list-name\">\n        <input type=\"text\" defaultValue={value} onChange={evt => debouncedCalueChanged(evt.target.value)} placeholder=\"List name\" />\n        <button onClick={add}>Close group</button>\n    </div>\n  )\n}\n\nexport default OkrListName","import React from 'react'\n\nconst OkrTaskAdd = ({ onComplete, groupId = undefined }) => {\n  const defaultValue = { title: '', groupId };\n  let currentValue = { ...defaultValue };\n\n  function changed(val) {\n    currentValue = {\n      ...currentValue,\n      ...val\n    };\n  }\n\n  function onKeyUp(evt) {\n    if (evt.charCode === 13) { // enter\n      onComplete && onComplete(currentValue);\n      evt.target.value = '';\n    }\n  }\n\n  return (\n    <div className=\"okr-task okr-task--add\">\n        <span className=\"okr-task__type\" aria-label=\"cat\" role=\"img\">T</span>\n        <input\n          type=\"text\"\n          placeholder=\"Add a new task...\"\n          defaultValue={currentValue.title}\n          onChange={evt => changed({title: evt.target.value})}\n          onKeyPress={evt => onKeyUp(evt)}/>\n    </div>\n  );\n}\n\nexport default OkrTaskAdd","import React from 'react'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { updateState, moveTaskTo } from '../../../store/okr.actions';\nimport { debounce } from '../../../lib/debounce';\n\nfunction mapStateToProps(state) {\n\treturn {\n    currentlyDraggin: state.okr.draggin\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({\n    updateState,\n    moveTaskTo\n\t}, dispatch);\n}\n\nclass OkrTask extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.domRef = React.createRef();\n  }\n\n  render() {\n    const disabled = this.props.disabled;\n    let currentValue = { ...this.props.task };\n  \n    const changed = (val = {}) => {\n\n      currentValue = {\n        ...currentValue,\n        ...val\n      };\n\n      this.props.onChange && this.props.onChange(currentValue);\n    }\n\n    const debouncedChange = debounce(changed, 500);\n\n    const onKeyUp = (evt) => {\n      if ([\"Escape\"].indexOf(evt.key) > -1) { // enter, escape\n        changed({ disabled: true });\n      }\n\n      if ([\"Enter\"].indexOf(evt.key) > -1) { // enter, escape\n        changed({ disabled: !disabled });\n      }\n    }\n\n    const onDoupleClick = (evt) => {\n      const elm = evt.currentTarget;\n      changed({ disabled: false });\n      setTimeout(() => {\n        elm.focus();\n      }, 50);\n    }\n\n    const waste = () => {\n      if(window.confirm(\"Are you sure?\")) {\n        this.props.onWaste(this.props.task.id)\n      }\n    }\n\n    let className = 'okr-task';\n    if (currentValue.status === 1) {\n      className += ' okr-task--done';\n    }\n\n    if (!disabled) {\n      className += ' okr-task--active';\n    }\n\n    return (\n      <div className={className} ref={this.domRef} >\n        <div className=\"okr-task__dragger\">\n          <span className=\"okr-task__type\" aria-label=\"cat\" role=\"img\">T</span>\n            <input\n              type=\"text\"\n              onDoubleClick={onDoupleClick}\n              readOnly={disabled}\n              onBlur={evt => changed({ disabled: true })}\n              onKeyDown={onKeyUp}\n              placeholder=\"Something to do...\"\n              defaultValue={currentValue.title}\n              onChange={evt => debouncedChange({ title: evt.target.value })} />\n            <input\n              type=\"checkbox\"\n              defaultChecked={currentValue.status === 1}\n              onChange={evt => changed({ status: evt.target.checked ? 1 : 0 })}\n              />\n            <span className=\"okr-task__deletebtn\" onClick={waste}>&#x1F5D1;</span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(() => mapStateToProps, mapDispatchToProps)(OkrTask);","import React from 'react'\n\nconst OkrAddGroup = ({ onAdd, groupId }) => {\n  return (\n    <div className=\"okr-add-group\">\n        <button onClick={() => onAdd(groupId)}>Add group here</button>\n    </div>\n  )\n}\n\nexport default OkrAddGroup","import React from \"react\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport { getGroupedTasks } from \"../../../store/okr.actions\";\n\nimport OkrListName from './list-name';\nimport OkrTaskAdd from './task-add';\nimport OkrTask from './task';\nimport OkrAddGroup from './add-group';\n\nimport { updateTask, addTask, updateListName, deleteTask, addGroupBefore, closeGroup, moveTaskTo } from '../../../store/okr.actions';\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tgroupedTasks: getGroupedTasks(state),\n\t};\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({\n        updateTask,\n        addTask,\n        updateListName,\n        deleteTask,\n        addGroupBefore,\n        closeGroup,\n        moveTaskTo\n\t}, dispatch);\n}\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? \"lightblue\" : \"grey\"\n\n});\n\nexport const GroupedProps = ({groupedTasks, updateTask, addTask, updateListName, deleteTask, addGroupBefore, closeGroup, moveTaskTo}) => {\n    const onDragEnd = (result) => {\n        if (!result.destination) {\n            return;\n        }\n\n        moveTaskTo(result.draggableId, result.destination.index, result.destination.droppableId)\n    }\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n        {groupedTasks.map((group, index) => {\n            return (\n                <div className=\"okr-task-list\" key={group.id || -1}>\n                    <OkrAddGroup onAdd={() => addGroupBefore({title: 'New Group'}, group.id)}></OkrAddGroup>\n                    <OkrListName value={group.title} onChange={title => updateListName(title, group.id)} onClose={() => closeGroup(group.id)}></OkrListName>\n                    <Droppable droppableId={group.id || -1}>\n                    {(provided, snapshot) => (\n                        <div {...provided.droppableProps} ref={provided.innerRef} style={getListStyle(snapshot.isDraggingOver)}>\n                            {group.tasks.length > 0 ? '' : <div className=\"okr-group-placeholder\"></div>}\n                            {group.tasks.map((item, index) => (\n                                <Draggable key={item.id} draggableId={item.id} index={index}>\n                                    {(provided, snapshot) => (\n                                        <div\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}>\n                                            <OkrTask\n                                                task={item}\n                                                onWaste={id => deleteTask(id)}\n                                                key={item.id}\n                                                disabled={item.disabled}\n                                                onChange={updatedTask => updateTask(updatedTask)}>\n                                            </OkrTask>\n                                        </div>\n                                    )}\n                                </Draggable>\n                            ))}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                    </Droppable>\n                    <OkrTaskAdd groupId={group.id} onComplete={newTask => addTask(newTask)}></OkrTaskAdd>\n                </div>\n            )\n        })}\n        </DragDropContext>\n    );\n};\n\nexport default connect(() => mapStateToProps, mapDispatchToProps)(GroupedProps);","import React from 'react'\n\nconst OkrKeyResult = ({ value, onChange }) => {\n  function valueChanged(val) {\n    onChange && onChange(val);\n  }\n\n  return (\n    <div className=\"okr-key-result\">\n        <input type=\"text\" defaultValue={value} onChange={evt => valueChanged(evt.target.value)} placeholder=\"A key result...\" />\n    </div>\n  )\n}\n\nexport default OkrKeyResult","import React from 'react'\nimport OkrKeyResult from './key-result';\n\nconst Objective = ({keyResults = [], objective = '', onObjectiveChange, onAddKeyResult, onKeyResultChange }) => {\n  const keyResultJsx = keyResults.map((kr, i) => {\n    return <OkrKeyResult key={i} value={kr} onChange={val => onKeyResultChange(val, i)}></OkrKeyResult>;\n  });\n\n  function objectiveChanged(val) {\n    onObjectiveChange && onObjectiveChange(val);\n  }\n\n  return (\n    <div className=\"okr-objective\">\n        <textarea\n          type=\"text\"\n          className=\"okr-primary-objective\"\n          defaultValue={objective}\n          onChange={evt => objectiveChanged(evt.target.value)}\n          placeholder=\"Okr primary goal\"></textarea>\n        {keyResultJsx}\n    </div>\n  )\n}\n\nexport default Objective","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport './styles.css';\n\nimport { getGroupedTasks, updateObjective, updateKeyResult, synchronizeMe } from '../../store/okr.actions';\nimport { loginAndSync } from '../../store/auth';\n\nimport GroupedProps from './parts/grouped-props';\nimport Objective from './parts/objective';\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tgroupedTasks: getGroupedTasks(state),\n\t\tobjective: state.okr.primaryObjective,\n\t\tkeyResults: state.okr.keyResults,\n\t};\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({\n\t\tupdateObjective,\n\t\tupdateKeyResult,\n\t\tloginAndSync,\n\t\tsynchronizeMe\n\t}, dispatch);\n}\n\nconst Okr = ({ keyResults, objective, updateObjective, updateKeyResult, loginAndSync, synchronizeMe }) => {\n\tfunction promptLogin() {\n\t\tconst username = prompt('What is your username?');\n\t\tconst password = prompt('What is your password?');\n\n\t\tloginAndSync(username, password);\n\t}\n\n\treturn (\n\t\t<div className=\"okr-page\">\n\t\t\t<div className=\"okr-page__content\">\n\t\t\t\t<br />\n\t\t\t\t<button onClick={() => promptLogin()}>Login</button>\n\t\t\t\t<button onClick={() => synchronizeMe()}>Get data</button>\n\t\t\t\t<Objective\n\t\t\t\t\tkeyResults={keyResults}\n\t\t\t\t\tobjective={objective}\n\t\t\t\t\tonKeyResultChange={(val, i) => updateKeyResult(val, i)}\n\t\t\t\t\tonObjectiveChange={val => updateObjective(val)}>\n\t\t\t\t</Objective>\n\t\t\t\t<GroupedProps></GroupedProps>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default connect(() => mapStateToProps, mapDispatchToProps)(Okr);","import React from 'react';\nimport { Provider } from 'react-redux'\n\nimport logo from './logo.svg';\nimport { store } from './store'\nimport './App.css';\nimport Okr from './components/okr';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n\n        <Okr></Okr>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}