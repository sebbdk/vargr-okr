{"version":3,"sources":["store/okr.js","store/auth.js","store/index.js","store/okr.actions.js","components/okr/parts/list-name.js","components/okr/parts/task-add.js","components/okr/parts/task.js","lib/debounce.js","components/okr/parts/add-group.js","components/okr/parts/grouped-props.js","components/okr/parts/key-result.js","components/okr/parts/objective.js","components/okr/index.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["initialState","primaryObjective","keyResults","taskGroups","title","id","tasks","nanoid","sort","groupId","status","enabled","undefined","okrActions","updateTask","Symbol","addTask","updatePrimaryObjective","updateKeyResult","updateGroupTitle","deleteTask","addGroupAfter","closeGroup","moveTaskTo","updateState","setAll","authActions","UPDATE","login","username","password","dispatch","getState","a","fetch","method","headers","body","req","json","res","type","data","rootReducer","combineReducers","okr","state","action","moveTask","find","t","taskId","allTasks","filter","otherTasks","groupTasks","t1","t2","splice","index","map","g","deleted","keyResult","afterGroup","afterId","afterIndex","indexOf","newGroup","group","newGroups","task","reduce","acc","curr","auth","composeEnhancers","composeWithDevTools","serialize","store","createStore","ls","localStorage","getItem","JSON","parse","getLocalStorageState","applyMiddleware","thunk","subscribe","setItem","stringify","obj","str","p","hasOwnProperty","push","encodeURIComponent","join","rawTask","defaultFields","order","user","_id","saveTask","jwt","resTask","console","error","updateObjective","updateListName","log","getData","okrtasks","i","okrtaskgroups","getGroupedTasks","groups","ta","tb","backlogTasks","OkrListName","onChange","onClose","value","valueChanged","val","className","defaultValue","evt","target","placeholder","onClick","window","confirm","OkrTaskAdd","onComplete","currentValue","aria-label","role","onKeyPress","charCode","onKeyUp","mapStateToProps","currentlyDraggin","draggin","OkrTask","props","domRef","React","createRef","disabled","this","changed","debouncedChange","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","setTimeout","debounce","ref","onDoubleClick","elm","currentTarget","focus","readOnly","onBlur","onKeyDown","key","defaultChecked","checked","onWaste","Component","connect","bindActionCreators","OkrAddGroup","onAdd","groupedTasks","onDragEnd","result","destination","draggableId","droppableId","provided","snapshot","droppableProps","innerRef","style","isDraggingOver","background","item","draggableProps","dragHandleProps","updatedTask","newTask","OkrKeyResult","Objective","objective","onObjectiveChange","onKeyResultChange","onAddKeyResult","keyResultJsx","kr","prompt","promptLogin","App","src","logo","alt","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.f19e7abc.chunk.js","sourcesContent":["import nanoid from 'nanoid';\n\nexport const initialState = {\n    primaryObjective: 'Finish projects & improve skillset',\n    keyResults: [\n        'Complete Math C',\n        'Complete 4 projects',\n        'Get detailed gold trading data for last 5 years'\n    ],\n    taskGroups: [\n        { title: 'Current sprint!', id: 1 },\n        { title: 'Some future sprint!', id: 2 }\n    ],\n    tasks: [\n        // add sort row...\n        { id: nanoid(), sort: 1, title: '[OKR Sys] Add group', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 2, title: '[OKR Sys] Close group', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 3, title: '[OKR Sys] Drag tasks', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 4, title: '[OKR Sys] Drop tasks into different sprint and sort', groupId: 1, status: 0, enabled: false },\n        { id: nanoid(), sort: 5, title: '[OKR Sys] Delete tasks', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 6, title: '[OKR Sys] Add tasks', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 7, title: '[OKR Sys] Basic state', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 8, title: '[OKR Sys] Basic UI', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 9, title: '[OKR Sys] Basic task behavior', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 10, title: '[OKR Sys] Save state to localstorage', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 11, title: '[OKR Sys] Deploy to Github page', groupId: 1, status: 1, enabled: false },\n\n        { id: nanoid(), sort: 12, title: 'Sign up for Math C', groupId: 2, status: 0, enabled: false },\n        { id: nanoid(), sort: 13, title: 'Read up on first math module', groupId: 2, status: 0, enabled: false },\n        { id: nanoid(), sort: 14, title: 'GBZ audio wiring', groupId: 2, status: 0, enabled: false },\n        { id: nanoid(), sort: 15, title: 'Gift for the lady', groupId: 2, status: 1, enabled: false },\n\n        { id: nanoid(), sort: 16, title: 'some task ÆØÅ', groupId: undefined, status: 0, enabled: false },\n        { id: nanoid(), sort: 17, title: 'some task ÆØÅ', groupId: undefined, status: 0, enabled: false },\n    ]\n}\n\nexport const okrActions = {\n    updateTask: Symbol('Update task'),\n    addTask: Symbol('Add task'),\n    updatePrimaryObjective: Symbol('Update primary objective'),\n    updateKeyResult: Symbol('Update key result'),\n    updateGroupTitle: Symbol('Update group title'),\n    deleteTask: Symbol('Delete task'),\n    addGroupAfter: Symbol('Add group after'),\n    closeGroup: Symbol('close group'),\n    moveTaskTo: Symbol('move task to'),\n    updateState: Symbol('update state'),\n    setAll: Symbol('set tasks'),\n}\n\nexport const okr = (state = { ...initialState }, action) => {\n    switch(action.type) {\n        case okrActions.setAll: {\n            return {\n                ...state,\n                ...action.data\n            }\n        }\n        case okrActions.moveTaskTo: {\n            const moveTask = { ...state.tasks.find(t => t.id === action.taskId), groupId: action.groupId === -1 ? undefined : action.groupId };\n            const allTasks = state.tasks.filter(t => t.id !== moveTask.id);\n            const otherTasks = allTasks.filter(t => t.groupId !== action.groupId);\n            let groupTasks = allTasks.filter(t => t.groupId === action.groupId).sort((t1, t2) => t1.sort < t2.sort ? -1 : 1);\n\n            groupTasks.splice(action.index, 0, moveTask);\n            groupTasks = groupTasks.map((t,index) => ({...t, sort: index}));\n\n            return {\n                ...state,\n                tasks: [ ...otherTasks, ...groupTasks ]\n            };\n        }\n        case okrActions.closeGroup: {\n            const tasks = state.tasks.map(t => {\n                return t.groupId !== action.id || t.status === 1 ? t : {...t, groupId: undefined}\n            })\n            const taskGroups = state.taskGroups.map(g => g.id !== action.id ? g : {...g, deleted: true})\n\n            return { ...state, taskGroups, tasks }\n        }\n        case okrActions.updateGroupTitle: {\n            const taskGroups = state.taskGroups.map(g => {\n                return g.id === action.id ? { ...g, title: action.title }:g;\n            });\n\n            return {\n                ...state,\n                taskGroups\n            }\n        }\n        case okrActions.updateKeyResult: {\n            const keyResults = [ ...state.keyResults ];\n            keyResults[action.index] = action.keyResult;\n            return {\n                ...state,\n                keyResults\n            }\n        }\n        case okrActions.addGroupAfter: {\n            const afterGroup = state.taskGroups.find(g => g.id === action.afterId);\n            const afterIndex = state.taskGroups.indexOf(afterGroup);\n            const newGroup = { ...action.group, id: nanoid() };\n\n            const newGroups = [ ...state.taskGroups ]\n            newGroups.splice(afterIndex+1, 0, newGroup);\n\n            return {\n                ...state,\n                taskGroups: newGroups\n            }\n        }\n        case okrActions.updatePrimaryObjective: {\n            return {\n                ...state,\n                primaryObjective: action.primaryObjective\n            }\n        }\n        case okrActions.deleteTask: {\n            return {\n                ...state,\n                tasks: state.tasks.filter(t => t.id !== action.id)\n            }\n        }\n        case okrActions.updateState: {\n            return {\n                ...state,\n                ...action.state\n            }\n        }\n        case okrActions.updateTask: {\n            const tasks = state.tasks.map(task => task.id === action.task.id ? {...task, ...action.task} : task);\n\n            return {\n                ...state,\n                tasks\n            }\n        }\n        case okrActions.addTask: {\n            const tasks = [\n                ...state.tasks,\n                {\n                    groupId: undefined,\n                    status: 0,\n                    ...action.task,\n                    id: action.task.id ? action.task.id : nanoid(),\n                    sort: state.tasks.reduce((acc,curr)=> curr.sort > acc ? curr.sort:acc, 0)+1\n                }\n            ];\n\n            return {\n                ...state,\n                tasks\n            }\n        }\n        default:{\n            return state;\n        }\n    }\n}","export const authActions = {\n    UPDATE: Symbol('update')\n}\n\nexport function login(username, password) {\n    return async (dispatch, getState) => {\n        const req = await fetch('https://strapi.sebb.dk/auth/local', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: `identifier=${username}&password=${password}`\n        });\n\n        const res = await req.json();\n\n        dispatch({\n            type: authActions.UPDATE,\n            data: {\n                ...res\n            }\n        });\n    }\n}\n\nexport const initialState = {}\n\nexport const auth = (state = { ...initialState }, action) => {\n    switch(action.type) {\n        case authActions.UPDATE: {\n            return {\n                ...state,\n                ...action.data\n            };\n        }\n        default:\n            return state;\n    }\n\n}","import { combineReducers, createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { okr } from './okr';\nimport { auth } from './auth';\n\nexport const rootReducer = combineReducers({\n    okr,\n    auth\n})\n\nconst composeEnhancers = composeWithDevTools({\n    serialize: true\n});\n\nfunction getLocalStorageState() {\n    const ls = localStorage.getItem('okr');\n    return ls ? JSON.parse(ls) : {};\n}\n\nexport const store = createStore(rootReducer, getLocalStorageState(), composeEnhancers(\n    applyMiddleware(thunk),\n    // other store enhancers if any\n));\n\nstore.subscribe(state => {\n    localStorage.setItem('okr', JSON.stringify(store.getState()));\n});\n","import { okrActions } from \"./okr\";\n\nexport const serialize = function(obj) {\n    var str = [];\n    for (var p in obj)\n      if (obj.hasOwnProperty(p)) {\n        str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n      }\n    return str.join(\"&\");\n  }\n\nexport function updateTask(rawTask) {\n    return async (dispatch, getState) => {\n        const defaultFields = {order: 0, status: 0, sort: 0, title:'', user: getState().auth.user._id}\n        const saveTask = { ...defaultFields, ...rawTask, group: rawTask.groupId }\n        delete saveTask.id;\n        delete saveTask.groupId;\n\n        const req = await fetch(`https://strapi.sebb.dk/okrtasks/${rawTask.id}`, {\n            method: 'put',\n            headers: {\n                'Authorization': 'Bearer ' + getState().auth.jwt,\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: serialize(saveTask)\n        });\n\n        if (req.status === 200) {\n            const resTask = await req.json();\n\n            const task = {\n                id: resTask.id,\n                title: resTask.title,\n                status: resTask.status,\n                sort: resTask.sort,\n                groupId: resTask.group\n            }\n    \n            dispatch({ type: okrActions.updateTask, task });\n        } else {\n            console.error('Update task failed', req)\n        }\n    }\n}\n\nexport function addTask(rawTask) {\n    return async (dispatch, getState) => {\n        const defaultFields = {order: 0, status: 0, title:'', sort: 0, user: getState().auth.user._id}\n        const saveTask = { ...defaultFields, ...rawTask, group: rawTask.groupId }\n\n        const req = await fetch('https://strapi.sebb.dk/okrtasks', {\n            method: 'post',\n            headers: {\n                'Authorization': 'Bearer ' + getState().auth.jwt,\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: serialize(saveTask)\n        });\n\n        const resTask = await req.json();\n        const task = {\n            id: resTask.id,\n            title: resTask.title,\n            status: resTask.status,\n            sort: resTask.sort,\n            groupId: resTask.group\n        }\n\n        dispatch({ type: okrActions.addTask, task });\n    }\n}\n\nexport function updateObjective(primaryObjective) {\n    return { type: okrActions.updatePrimaryObjective, primaryObjective };\n}\n\nexport function updateKeyResult(keyResult, index) {\n    return { type: okrActions.updateKeyResult, keyResult, index };\n}\n\nexport function moveTaskTo(taskId, index, groupId) {\n    return { type: okrActions.moveTaskTo, taskId, index, groupId};\n}\n\nexport function updateListName(title, id) {\n    return { type: okrActions.updateGroupTitle, title, id };\n}\n\nexport function deleteTask(id) {\n    return async (dispatch, getState) => {\n        const req = await fetch(`https://strapi.sebb.dk/okrtasks/${id}`, {\n            method: 'delete',\n            headers: { 'Authorization': 'Bearer ' + getState().auth.jwt, }\n        });\n\n        console.log(id)\n\n        if (req.status === 200) {\n            dispatch({ type: okrActions.deleteTask, id });\n        } else {\n            console.error('Update task failed', req)\n        }\n    }\n\n    \n}\n\nexport function addGroupAfter(group, afterId) {\n    console.log(group, afterId)\n\n    return { type: okrActions.addGroupAfter, afterId, group};\n}\n\nexport function closeGroup(id) {\n    return { type: okrActions.closeGroup, id};\n}\n\nexport function updateState(state) {\n    return { type: okrActions.updateState, state};\n}\n\nexport function getData() {\n    return async (dispatch, getState) => {\n        const req = await fetch('https://strapi.sebb.dk/users/me', {\n            method: 'get',\n            headers: {\n                'Authorization': 'Bearer ' + getState().auth.jwt\n            }\n        });\n\n        const res = await req.json();\n\n        const tasks = res.okrtasks.map(i => ({\n            id: i._id,\n            title: i.title,\n            status: i.status,\n            sort: i.sort\n        }));\n\n        const taskGroups = res.okrtaskgroups.map(i => ({\n            id: i._id,\n            title: i.title\n        }));\n\n        dispatch({ type: okrActions.setAll, data: { tasks, taskGroups } });\n    }\n}\n\nexport const getGroupedTasks = (state) => {\n    const groups = state.okr.taskGroups\n        .filter(g => g.deleted !== true)\n        .map((group) => {\n            const tasks = state.okr.tasks.filter(task => task.groupId === group.id).sort((ta, tb) => ta.sort > tb.sort ? 1:-1 );\n            return { ...group,  tasks}\n        });\n\n    const backlogTasks = state.okr.tasks.filter(t => t.groupId === undefined).sort((ta, tb) => ta.sort > tb.sort ? 1:-1 );\n\n    groups.push({ title: 'Backlog tasks', tasks: backlogTasks })\n\n    return groups;\n}","import React from 'react'\n\nconst OkrListName = ({ onChange, onClose, value }) => {\n  function valueChanged(val) {\n    onChange && onChange(val);\n  }\n\n  function add() {\n    if(window.confirm(\"Are you sure?\")) {\n      onClose();\n    }\n  }\n\n  return (\n    <div className=\"okr-list-name\">\n        <input type=\"text\" defaultValue={value} onChange={evt => valueChanged(evt.target.value)} placeholder=\"List name\" />\n        <button onClick={add}>Close group</button>\n    </div>\n  )\n}\n\nexport default OkrListName","import React from 'react'\n\nconst OkrTaskAdd = ({ onComplete, groupId = undefined }) => {\n  const defaultValue = { title: '', groupId };\n  let currentValue = { ...defaultValue };\n\n  function changed(val) {\n    currentValue = {\n      ...currentValue,\n      ...val\n    };\n  }\n\n  function onKeyUp(evt) {\n    if (evt.charCode === 13) { // enter\n      onComplete && onComplete(currentValue);\n      evt.target.value = '';\n    }\n  }\n\n  return (\n    <div className=\"okr-task okr-task--add\">\n        <span className=\"okr-task__type\" aria-label=\"cat\" role=\"img\">T</span>\n        <input\n          type=\"text\"\n          placeholder=\"Add a new task...\"\n          defaultValue={currentValue.title}\n          onChange={evt => changed({title: evt.target.value})}\n          onKeyPress={evt => onKeyUp(evt)}/>\n    </div>\n  );\n}\n\nexport default OkrTaskAdd","import React from 'react'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { updateState, moveTaskTo } from '../../../store/okr.actions';\nimport { debounce } from '../../../lib/debounce';\n\nfunction mapStateToProps(state) {\n\treturn {\n    currentlyDraggin: state.okr.draggin\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({\n    updateState,\n    moveTaskTo\n\t}, dispatch);\n}\n\nclass OkrTask extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.domRef = React.createRef();\n  }\n\n  render() {\n    const disabled = this.props.disabled;\n    let currentValue = { ...this.props.task };\n  \n    const changed = (val = {}) => {\n\n      currentValue = {\n        ...currentValue,\n        ...val\n      };\n\n      this.props.onChange && this.props.onChange(currentValue);\n    }\n\n    const debouncedChange = debounce(changed, 500);\n\n    const onKeyUp = (evt) => {\n      if ([\"Escape\"].indexOf(evt.key) > -1) { // enter, escape\n        changed({ disabled: true });\n      }\n\n      if ([\"Enter\"].indexOf(evt.key) > -1) { // enter, escape\n        changed({ disabled: !disabled });\n      }\n    }\n\n    const onDoupleClick = (evt) => {\n      const elm = evt.currentTarget;\n      changed({ disabled: false });\n      setTimeout(() => {\n        elm.focus();\n      }, 50);\n    }\n\n    const waste = () => {\n      if(window.confirm(\"Are you sure?\")) {\n        this.props.onWaste(this.props.task.id)\n      }\n    }\n\n    let className = 'okr-task';\n    if (currentValue.status === 1) {\n      className += ' okr-task--done';\n    }\n\n    if (!disabled) {\n      className += ' okr-task--active';\n    }\n\n    return (\n      <div className={className} ref={this.domRef} >\n        <div className=\"okr-task__dragger\">\n          <span className=\"okr-task__type\" aria-label=\"cat\" role=\"img\">T</span>\n            <input\n              type=\"text\"\n              onDoubleClick={onDoupleClick}\n              readOnly={disabled}\n              onBlur={evt => changed({ disabled: true })}\n              onKeyDown={onKeyUp}\n              placeholder=\"Something to do...\"\n              defaultValue={currentValue.title}\n              onChange={evt => debouncedChange({ title: evt.target.value })} />\n            <input\n              type=\"checkbox\"\n              defaultChecked={currentValue.status === 1}\n              onChange={evt => changed({ status: evt.target.checked ? 1 : 0 })}\n              />\n            <span className=\"okr-task__deletebtn\" onClick={waste}>&#x1F5D1;</span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(() => mapStateToProps, mapDispatchToProps)(OkrTask);","export function debounce(func, wait, immediate) {\n\tvar timeout;\n\treturn function() {\n\t\tvar context = this, args = arguments;\n\t\tvar later = function() {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) func.apply(context, args);\n\t\t};\n\t\tvar callNow = immediate && !timeout;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t\tif (callNow) func.apply(context, args);\n\t};\n};","import React from 'react'\n\nconst OkrAddGroup = ({ onAdd, groupId }) => {\n  return (\n    <div className=\"okr-add-group\">\n        <button onClick={() => onAdd(groupId)}>Add group here</button>\n    </div>\n  )\n}\n\nexport default OkrAddGroup","import React from \"react\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport { getGroupedTasks } from \"../../../store/okr.actions\";\n\nimport OkrListName from './list-name';\nimport OkrTaskAdd from './task-add';\nimport OkrTask from './task';\nimport OkrAddGroup from './add-group';\n\nimport { updateTask, addTask, updateListName, deleteTask, addGroupAfter, closeGroup, moveTaskTo } from '../../../store/okr.actions';\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tgroupedTasks: getGroupedTasks(state),\n\t};\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({\n        updateTask,\n        addTask,\n        updateListName,\n        deleteTask,\n        addGroupAfter,\n        closeGroup,\n        moveTaskTo\n\t}, dispatch);\n}\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? \"lightblue\" : \"grey\"\n\n});\n\nexport const GroupedProps = ({groupedTasks, updateTask, addTask, updateListName, deleteTask, addGroupAfter, closeGroup, moveTaskTo}) => {\n    const onDragEnd = (result) => {\n        if (!result.destination) {\n            return;\n        }\n\n        moveTaskTo(result.draggableId, result.destination.index, result.destination.droppableId)\n    }\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n        {groupedTasks.map((group, index) => {\n            return (\n                <div className=\"okr-task-list\" key={group.id || -1}>\n                    <OkrListName value={group.title} onChange={title => updateListName(title, group.id)} onClose={() => closeGroup(group.id)}></OkrListName>\n                    <Droppable droppableId={group.id || -1}>\n                    {(provided, snapshot) => (\n                        <div {...provided.droppableProps} ref={provided.innerRef} style={getListStyle(snapshot.isDraggingOver)}>\n                            {group.tasks.map((item, index) => (\n                                <Draggable key={item.id} draggableId={item.id} index={index}>\n                                    {(provided, snapshot) => (\n                                        <div\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}>\n                                            <OkrTask\n                                                task={item}\n                                                onWaste={id => deleteTask(id)}\n                                                key={item.id}\n                                                disabled={item.disabled}\n                                                onChange={updatedTask => updateTask(updatedTask)}>\n                                            </OkrTask>\n                                        </div>\n                                    )}\n                                </Draggable>\n                            ))}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                    </Droppable>\n                    <OkrTaskAdd groupId={group.id} onComplete={newTask => addTask(newTask)}></OkrTaskAdd>\n                    <OkrAddGroup onAdd={() => addGroupAfter({title: 'New Group'}, group.id)}></OkrAddGroup>\n                </div>\n            )\n        })}\n        </DragDropContext>\n    );\n};\n\nexport default connect(() => mapStateToProps, mapDispatchToProps)(GroupedProps);","import React from 'react'\n\nconst OkrKeyResult = ({ value, onChange }) => {\n  function valueChanged(val) {\n    onChange && onChange(val);\n  }\n\n  return (\n    <div className=\"okr-key-result\">\n        <input type=\"text\" defaultValue={value} onChange={evt => valueChanged(evt.target.value)} placeholder=\"A key result...\" />\n    </div>\n  )\n}\n\nexport default OkrKeyResult","import React from 'react'\nimport OkrKeyResult from './key-result';\n\nconst Objective = ({keyResults = [], objective = '', onObjectiveChange, onAddKeyResult, onKeyResultChange }) => {\n  const keyResultJsx = keyResults.map((kr, i) => {\n    return <OkrKeyResult key={i} value={kr} onChange={val => onKeyResultChange(val, i)}></OkrKeyResult>;\n  });\n\n  function objectiveChanged(val) {\n    onObjectiveChange && onObjectiveChange(val);\n  }\n\n  return (\n    <div className=\"okr-objective\">\n        <textarea\n          type=\"text\"\n          className=\"okr-primary-objective\"\n          defaultValue={objective}\n          onChange={evt => objectiveChanged(evt.target.value)}\n          placeholder=\"Okr primary goal\"></textarea>\n        {keyResultJsx}\n    </div>\n  )\n}\n\nexport default Objective","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport './styles.css';\n\nimport { getGroupedTasks, updateObjective, updateKeyResult, getData } from '../../store/okr.actions';\nimport { login } from '../../store/auth';\n\nimport GroupedProps from './parts/grouped-props';\nimport Objective from './parts/objective';\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tgroupedTasks: getGroupedTasks(state),\n\t\tobjective: state.okr.primaryObjective,\n\t\tkeyResults: state.okr.keyResults,\n\t};\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({\n\t\tupdateObjective,\n\t\tupdateKeyResult,\n\t\tlogin,\n\t\tgetData\n\t}, dispatch);\n}\n\nconst Okr = ({ keyResults, objective, updateObjective, updateKeyResult, login, getData }) => {\n\tfunction promptLogin() {\n\t\tconst username = prompt('What is your username?');\n\t\tconst password = prompt('What is your password?');\n\n\t\tlogin(username, password);\n\t}\n\n\treturn (\n\t\t<div className=\"okr-page\">\n\t\t\t<div className=\"okr-page__content\">\n\t\t\t\t<br />\n\t\t\t\t<button onClick={() => promptLogin()}>Login</button>\n\t\t\t\t<button onClick={() => getData()}>Get data</button>\n\t\t\t\t<Objective\n\t\t\t\t\tkeyResults={keyResults}\n\t\t\t\t\tobjective={objective}\n\t\t\t\t\tonKeyResultChange={(val, i) => updateKeyResult(val, i)}\n\t\t\t\t\tonObjectiveChange={val => updateObjective(val)}>\n\t\t\t\t</Objective>\n\t\t\t\t<GroupedProps></GroupedProps>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default connect(() => mapStateToProps, mapDispatchToProps)(Okr);","import React from 'react';\nimport { Provider } from 'react-redux'\n\nimport logo from './logo.svg';\nimport { store } from './store'\nimport './App.css';\nimport Okr from './components/okr';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n\n        <Okr></Okr>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}