{"version":3,"sources":["logo.svg","store/okr.js","store/index.js","store/okr.actions.js","components/okr/parts/list-name.js","components/okr/parts/task-add.js","components/okr/parts/task.js","components/okr/parts/add-group.js","components/okr/parts/grouped-props.js","components/okr/parts/key-result.js","components/okr/parts/objective.js","components/okr/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","primaryObjective","keyResults","taskGroups","title","id","tasks","nanoid","sort","groupId","status","enabled","undefined","okrActions","updateTask","Symbol","addTask","updatePrimaryObjective","updateKeyResult","updateGroupTitle","deleteTask","addGroupAfter","closeGroup","moveTaskTo","updateState","rootReducer","combineReducers","okr","state","action","type","moveTask","find","t","taskId","allTasks","filter","otherTasks","groupTasks","t1","t2","splice","index","map","g","deleted","keyResult","afterGroup","afterId","afterIndex","indexOf","newGroup","group","newGroups","task","reduce","acc","curr","composeEnhancers","composeWithDevTools","serialize","store","createStore","ls","localStorage","getItem","JSON","parse","getLocalStorageState","subscribe","setItem","stringify","getState","updateObjective","updateListName","console","log","getGroupedTasks","groups","ta","tb","backlogTasks","push","OkrListName","onChange","onClose","value","valueChanged","val","className","defaultValue","evt","target","placeholder","onClick","window","confirm","OkrTaskAdd","onComplete","currentValue","aria-label","role","onKeyPress","charCode","onKeyUp","mapStateToProps","currentlyDraggin","draggin","OkrTask","props","domRef","React","createRef","disabled","this","changed","ref","onDoubleClick","elm","currentTarget","setTimeout","focus","readOnly","onBlur","onKeyDown","key","defaultChecked","checked","onWaste","Component","connect","dispatch","bindActionCreators","OkrAddGroup","onAdd","groupedTasks","onDragEnd","result","destination","draggableId","droppableId","provided","snapshot","droppableProps","innerRef","style","isDraggingOver","background","item","draggableProps","dragHandleProps","updatedTask","newTask","OkrKeyResult","Objective","objective","onObjectiveChange","onKeyResultChange","onAddKeyResult","keyResultJsx","kr","i","App","src","logo","alt","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f042623e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import nanoid from 'nanoid';\n\nexport const initialState = {\n    primaryObjective: 'Finish projects & improve skillset',\n    keyResults: [\n        'Complete Math C',\n        'Complete 4 projects',\n        'Get detailed gold trading data for last 5 years'\n    ],\n    taskGroups: [\n        { title: 'Current sprint!', id: 1 },\n        { title: 'Some future sprint!', id: 2 }\n    ],\n    tasks: [\n        // add sort row...\n        { id: nanoid(), sort: 1, title: '[OKR Sys] Add group', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 2, title: '[OKR Sys] Close group', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 3, title: '[OKR Sys] Drag tasks', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 4, title: '[OKR Sys] Drop tasks into different sprint and sort', groupId: 1, status: 0, enabled: false },\n        { id: nanoid(), sort: 5, title: '[OKR Sys] Delete tasks', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 6, title: '[OKR Sys] Add tasks', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 7, title: '[OKR Sys] Basic state', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 8, title: '[OKR Sys] Basic UI', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 9, title: '[OKR Sys] Basic task behavior', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 10, title: '[OKR Sys] Save state to localstorage', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 11, title: '[OKR Sys] Deploy to Github page', groupId: 1, status: 1, enabled: false },\n\n        { id: nanoid(), sort: 12, title: 'Sign up for Math C', groupId: 2, status: 0, enabled: false },\n        { id: nanoid(), sort: 13, title: 'Read up on first math module', groupId: 2, status: 0, enabled: false },\n        { id: nanoid(), sort: 14, title: 'GBZ audio wiring', groupId: 2, status: 0, enabled: false },\n        { id: nanoid(), sort: 15, title: 'Gift for the lady', groupId: 2, status: 1, enabled: false },\n\n        { id: nanoid(), sort: 16, title: 'some task ÆØÅ', groupId: undefined, status: 0, enabled: false },\n        { id: nanoid(), sort: 17, title: 'some task ÆØÅ', groupId: undefined, status: 0, enabled: false },\n    ]\n}\n\nexport const okrActions = {\n    updateTask: Symbol('Update task'),\n    addTask: Symbol('Add task'),\n    updatePrimaryObjective: Symbol('Update primary objective'),\n    updateKeyResult: Symbol('Update key result'),\n    updateGroupTitle: Symbol('Update group title'),\n    deleteTask: Symbol('Delete task'),\n    addGroupAfter: Symbol('Add group after'),\n    closeGroup: Symbol('close group'),\n    moveTaskTo: Symbol('move task to'),\n    updateState: Symbol('update state'),\n}\n\nexport const okr = (state = { ...initialState }, action) => {\n    switch(action.type) {\n        case okrActions.moveTaskTo: {\n            const moveTask = { ...state.tasks.find(t => t.id === action.taskId), groupId: action.groupId === -1 ? undefined : action.groupId };\n            const allTasks = state.tasks.filter(t => t.id !== moveTask.id);\n            const otherTasks = allTasks.filter(t => t.groupId !== action.groupId);\n            let groupTasks = allTasks.filter(t => t.groupId === action.groupId).sort((t1, t2) => t1.sort < t2.sort ? -1 : 1);\n\n            groupTasks.splice(action.index, 0, moveTask);\n            groupTasks = groupTasks.map((t,index) => ({...t, sort: index}));\n\n            return {\n                ...state,\n                tasks: [ ...otherTasks, ...groupTasks ]\n            };\n        }\n        case okrActions.closeGroup: {\n            const tasks = state.tasks.map(t => {\n                return t.groupId !== action.id || t.status === 1 ? t : {...t, groupId: undefined}\n            })\n            const taskGroups = state.taskGroups.map(g => g.id !== action.id ? g : {...g, deleted: true})\n\n            return { ...state, taskGroups, tasks }\n        }\n        case okrActions.updateGroupTitle: {\n            const taskGroups = state.taskGroups.map(g => {\n                return g.id === action.id ? { ...g, title: action.title }:g;\n            });\n\n            return {\n                ...state,\n                taskGroups\n            }\n        }\n        case okrActions.updateKeyResult: {\n            const keyResults = [ ...state.keyResults ];\n            keyResults[action.index] = action.keyResult;\n            return {\n                ...state,\n                keyResults\n            }\n        }\n        case okrActions.addGroupAfter: {\n            const afterGroup = state.taskGroups.find(g => g.id === action.afterId);\n            const afterIndex = state.taskGroups.indexOf(afterGroup);\n            const newGroup = { ...action.group, id: nanoid() };\n\n            const newGroups = [ ...state.taskGroups ]\n            newGroups.splice(afterIndex+1, 0, newGroup);\n\n            return {\n                ...state,\n                taskGroups: newGroups\n            }\n        }\n        case okrActions.updatePrimaryObjective: {\n            return {\n                ...state,\n                primaryObjective: action.primaryObjective\n            }\n        }\n        case okrActions.deleteTask: {\n            return {\n                ...state,\n                tasks: state.tasks.filter(t => t.id !== action.id)\n            }\n        }\n        case okrActions.updateState: {\n            return {\n                ...state,\n                ...action.state\n            }\n        }\n        case okrActions.updateTask: {\n            const tasks = state.tasks.map(task => task.id === action.task.id ? {...task, ...action.task} : task);\n\n            return {\n                ...state,\n                tasks\n            }\n        }\n        case okrActions.addTask: {\n            const tasks = [\n                ...state.tasks,\n                {\n                    groupId: undefined,\n                    status: 0,\n                    ...action.task,\n                    id: nanoid(),\n                    sort: state.tasks.reduce((acc,curr)=> curr.sort > acc ? curr.sort:acc, 0)+1\n                }\n            ];\n\n            return {\n                ...state,\n                tasks\n            }\n        }\n        default:{\n            return state;\n        }\n    }\n}","import { combineReducers, createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { okr } from './okr';\n\nexport const rootReducer = combineReducers({\n    okr\n})\n\nconst composeEnhancers = composeWithDevTools({\n    serialize: true\n});\n\nfunction getLocalStorageState() {\n    const ls = localStorage.getItem('okr');\n    return ls ? JSON.parse(ls) : {};\n}\n\nexport const store = createStore(rootReducer, getLocalStorageState(), composeEnhancers(\n    //applyMiddleware(...middleware),\n    // other store enhancers if any\n));\n\nstore.subscribe(state => {\n    localStorage.setItem('okr', JSON.stringify(store.getState()));\n});\n","import { okrActions } from \"./okr\";\n\nexport function updateTask(task) {\n\treturn { type: okrActions.updateTask, task };\n}\n\nexport function addTask(task) {\n    return { type: okrActions.addTask, task };\n}\n\nexport function updateObjective(primaryObjective) {\n    return { type: okrActions.updatePrimaryObjective, primaryObjective };\n}\n\nexport function updateKeyResult(keyResult, index) {\n    return { type: okrActions.updateKeyResult, keyResult, index };\n}\n\nexport function moveTaskTo(taskId, index, groupId) {\n    return { type: okrActions.moveTaskTo, taskId, index, groupId};\n}\n\nexport function updateListName(title, id) {\n    return { type: okrActions.updateGroupTitle, title, id };\n}\n\nexport function deleteTask(id) {\n    return { type: okrActions.deleteTask, id };\n}\n\nexport function addGroupAfter(group, afterId) {\n    console.log(group, afterId)\n\n    return { type: okrActions.addGroupAfter, afterId, group};\n}\n\nexport function closeGroup(id) {\n    return { type: okrActions.closeGroup, id};\n}\n\nexport function updateState(state) {\n    return { type: okrActions.updateState, state};\n}\n\nexport const getGroupedTasks = (state) => {\n    const groups = state.okr.taskGroups\n        .filter(g => g.deleted !== true)\n        .map((group) => {\n            const tasks = state.okr.tasks.filter(task => task.groupId === group.id).sort((ta, tb) => ta.sort > tb.sort ? 1:-1 );\n            return { ...group,  tasks}\n        });\n\n    const backlogTasks = state.okr.tasks.filter(t => t.groupId === undefined).sort((ta, tb) => ta.sort > tb.sort ? 1:-1 );\n\n    groups.push({ title: 'Backlog tasks', tasks: backlogTasks })\n\n    return groups;\n}","import React from 'react'\n\nconst OkrListName = ({ onChange, onClose, value }) => {\n  function valueChanged(val) {\n    onChange && onChange(val);\n  }\n\n  function add() {\n    if(window.confirm(\"Are you sure?\")) {\n      onClose();\n    }\n  }\n\n  return (\n    <div className=\"okr-list-name\">\n        <input type=\"text\" defaultValue={value} onChange={evt => valueChanged(evt.target.value)} placeholder=\"List name\" />\n        <button onClick={add}>Close group</button>\n    </div>\n  )\n}\n\nexport default OkrListName","import React from 'react'\n\nconst OkrTaskAdd = ({ onComplete, groupId = undefined }) => {\n  const defaultValue = { title: '', groupId };\n  let currentValue = { ...defaultValue };\n\n  function changed(val) {\n    currentValue = {\n      ...currentValue,\n      ...val\n    };\n  }\n\n  function onKeyUp(evt) {\n    if (evt.charCode === 13) { // enter\n      onComplete && onComplete(currentValue);\n      evt.target.value = '';\n    }\n  }\n\n  return (\n    <div className=\"okr-task okr-task--add\">\n        <span className=\"okr-task__type\" aria-label=\"cat\" role=\"img\">T</span>\n        <input\n          type=\"text\"\n          placeholder=\"Add a new task...\"\n          defaultValue={currentValue.title}\n          onChange={evt => changed({title: evt.target.value})}\n          onKeyPress={evt => onKeyUp(evt)}/>\n    </div>\n  );\n}\n\nexport default OkrTaskAdd","import React from 'react'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { updateState, moveTaskTo } from '../../../store/okr.actions';\n\nfunction mapStateToProps(state) {\n\treturn {\n    currentlyDraggin: state.okr.draggin\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({\n    updateState,\n    moveTaskTo\n\t}, dispatch);\n}\n\nclass OkrTask extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.domRef = React.createRef();\n  }\n\n  render() {\n    const disabled = this.props.disabled;\n    let currentValue = { ...this.props.task };\n  \n    const changed = (val = {}) => {\n\n      currentValue = {\n        ...currentValue,\n        ...val\n      };\n\n      this.props.onChange && this.props.onChange(currentValue);\n    }\n\n    const onKeyUp = (evt) => {\n      if ([\"Escape\"].indexOf(evt.key) > -1) { // enter, escape\n        changed({ disabled: true });\n      }\n\n      if ([\"Enter\"].indexOf(evt.key) > -1) { // enter, escape\n        changed({ disabled: !disabled });\n      }\n    }\n\n    const onDoupleClick = (evt) => {\n      const elm = evt.currentTarget;\n      changed({ disabled: false });\n      setTimeout(() => {\n        elm.focus();\n      }, 50);\n    }\n\n    const waste = () => {\n      if(window.confirm(\"Are you sure?\")) {\n        this.props.onWaste(this.props.task.id)\n      }\n    }\n\n    let className = 'okr-task';\n    if (currentValue.status === 1) {\n      className += ' okr-task--done';\n    }\n\n    if (!disabled) {\n      className += ' okr-task--active';\n    }\n\n    return (\n      <div className={className} ref={this.domRef} >\n        <div className=\"okr-task__dragger\">\n          <span className=\"okr-task__type\" aria-label=\"cat\" role=\"img\">T</span>\n            <input\n              type=\"text\"\n              onDoubleClick={onDoupleClick}\n              readOnly={disabled}\n              onBlur={evt => changed({ disabled: true })}\n              onKeyDown={onKeyUp}\n              placeholder=\"Something to do...\"\n              defaultValue={currentValue.title}\n              onChange={evt => changed({ title: evt.target.value })} />\n            <input\n              type=\"checkbox\"\n              defaultChecked={currentValue.status === 1}\n              onChange={evt => changed({ status: evt.target.checked ? 1 : 0 })}\n              />\n            <span className=\"okr-task__deletebtn\" onClick={waste}>&#x1F5D1;</span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(() => mapStateToProps, mapDispatchToProps)(OkrTask);","import React from 'react'\n\nconst OkrAddGroup = ({ onAdd, groupId }) => {\n  return (\n    <div className=\"okr-add-group\">\n        <button onClick={() => onAdd(groupId)}>Add group here</button>\n    </div>\n  )\n}\n\nexport default OkrAddGroup","import React from \"react\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport { getGroupedTasks } from \"../../../store/okr.actions\";\n\nimport OkrListName from './list-name';\nimport OkrTaskAdd from './task-add';\nimport OkrTask from './task';\nimport OkrAddGroup from './add-group';\n\nimport { updateTask, addTask, updateListName, deleteTask, addGroupAfter, closeGroup, moveTaskTo } from '../../../store/okr.actions';\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tgroupedTasks: getGroupedTasks(state),\n\t};\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({\n        updateTask,\n        addTask,\n        updateListName,\n        deleteTask,\n        addGroupAfter,\n        closeGroup,\n        moveTaskTo\n\t}, dispatch);\n}\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? \"lightblue\" : \"grey\"\n\n});\n\nexport const GroupedProps = ({groupedTasks, updateTask, addTask, updateListName, deleteTask, addGroupAfter, closeGroup, moveTaskTo}) => {\n    const onDragEnd = (result) => {\n        if (!result.destination) {\n            return;\n        }\n\n        moveTaskTo(result.draggableId, result.destination.index, result.destination.droppableId)\n    }\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n        {groupedTasks.map((group, index) => {\n            return (\n                <div className=\"okr-task-list\" key={group.id || -1}>\n                    <OkrListName value={group.title} onChange={title => updateListName(title, group.id)} onClose={() => closeGroup(group.id)}></OkrListName>\n                    <Droppable droppableId={group.id || -1}>\n                    {(provided, snapshot) => (\n                        <div {...provided.droppableProps} ref={provided.innerRef} style={getListStyle(snapshot.isDraggingOver)}>\n                            {group.tasks.map((item, index) => (\n                                <Draggable key={item.id} draggableId={item.id} index={index}>\n                                    {(provided, snapshot) => (\n                                        <div\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}>\n                                            <OkrTask\n                                                task={item}\n                                                onWaste={id => deleteTask(id)}\n                                                key={item.id}\n                                                disabled={item.disabled}\n                                                onChange={updatedTask => updateTask(updatedTask)}>\n                                            </OkrTask>\n                                        </div>\n                                    )}\n                                </Draggable>\n                            ))}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                    </Droppable>\n                    <OkrTaskAdd groupId={group.id} onComplete={newTask => addTask(newTask)}></OkrTaskAdd>\n                    <OkrAddGroup onAdd={() => addGroupAfter({title: 'New Group'}, group.id)}></OkrAddGroup>\n                </div>\n            )\n        })}\n        </DragDropContext>\n    );\n};\n\nexport default connect(() => mapStateToProps, mapDispatchToProps)(GroupedProps);","import React from 'react'\n\nconst OkrKeyResult = ({ value, onChange }) => {\n  function valueChanged(val) {\n    onChange && onChange(val);\n  }\n\n  return (\n    <div className=\"okr-key-result\">\n        <input type=\"text\" defaultValue={value} onChange={evt => valueChanged(evt.target.value)} placeholder=\"A key result...\" />\n    </div>\n  )\n}\n\nexport default OkrKeyResult","import React from 'react'\nimport OkrKeyResult from './key-result';\n\nconst Objective = ({keyResults = [], objective = '', onObjectiveChange, onAddKeyResult, onKeyResultChange }) => {\n  const keyResultJsx = keyResults.map((kr, i) => {\n    return <OkrKeyResult key={i} value={kr} onChange={val => onKeyResultChange(val, i)}></OkrKeyResult>;\n  });\n\n  function objectiveChanged(val) {\n    onObjectiveChange && onObjectiveChange(val);\n  }\n\n  return (\n    <div className=\"okr-objective\">\n        <textarea\n          type=\"text\"\n          className=\"okr-primary-objective\"\n          defaultValue={objective}\n          onChange={evt => objectiveChanged(evt.target.value)}\n          placeholder=\"Okr primary goal\"></textarea>\n        {keyResultJsx}\n    </div>\n  )\n}\n\nexport default Objective","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport './styles.css';\n\nimport { getGroupedTasks, updateObjective, updateKeyResult} from '../../store/okr.actions';\n\nimport GroupedProps from './parts/grouped-props';\nimport Objective from './parts/objective';\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tgroupedTasks: getGroupedTasks(state),\n\t\tobjective: state.okr.primaryObjective,\n\t\tkeyResults: state.okr.keyResults,\n\t};\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({\n\t\tupdateObjective,\n\t\tupdateKeyResult\n\t}, dispatch);\n}\n\nconst Okr = ({ keyResults, objective, updateObjective, updateKeyResult }) => {\n\treturn (\n\t\t<div className=\"okr-page\">\n\t\t\t<div className=\"okr-page__content\">\n\t\t\t\t<Objective\n\t\t\t\t\tkeyResults={keyResults}\n\t\t\t\t\tobjective={objective}\n\t\t\t\t\tonKeyResultChange={(val, i) => updateKeyResult(val, i)}\n\t\t\t\t\tonObjectiveChange={val => updateObjective(val)}>\n\t\t\t\t</Objective>\n\t\t\t\t<GroupedProps></GroupedProps>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default connect(() => mapStateToProps, mapDispatchToProps)(Okr);","import React from 'react';\nimport { Provider } from 'react-redux'\n\nimport logo from './logo.svg';\nimport { store } from './store'\nimport './App.css';\nimport Okr from './components/okr';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n\n        <Okr></Okr>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}