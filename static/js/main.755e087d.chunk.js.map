{"version":3,"sources":["store/okr.js","store/auth.js","store/okr.actions.js","store/index.js","lib/debounce.js","components/okr/parts/list-name.js","components/okr/parts/task-add.js","components/okr/parts/task.js","components/okr/parts/add-group.js","components/okr/parts/grouped-props.js","components/okr/parts/key-result.js","components/okr/parts/objective.js","components/okr/index.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["initialState","primaryObjective","keyResults","taskGroups","title","id","sort","tasks","nanoid","groupId","status","enabled","undefined","okrActions","updateTask","Symbol","addTask","updatePrimaryObjective","updateKeyResult","updateGroup","deleteTask","deleteGroup","addGroup","updateState","setAll","authActions","UPDATE","login","username","password","dispatch","getState","a","fetch","method","headers","body","req","json","res","type","data","serialize","obj","str","p","hasOwnProperty","push","encodeURIComponent","join","rawTask","replace","originalTask","okr","filter","t","defaultFields","user","auth","_id","saveTask","okrtaskgroup","__v","task","jwt","console","error","reduce","acc","curr","order","tempTask","resTask","updateObjective","keyResult","index","moveTaskTo","taskId","state","t1","t2","find","splice","beforeVal","afterVal","length","updateListName","addGroupBefore","rawGroup","beforeId","beforeGroup","g","groups","deleted","beforeGroupIndex","indexOf","postVal","prevVal","saveGroup","tempGroup","group","resGroup","closeGroup","originalGroup","synchronize","okrtasks","map","i","okrtaskgroups","getGroupedTasks","ta","tb","deletedGroupIds","backlogTasks","g1","g2","rootReducer","combineReducers","action","composeEnhancers","composeWithDevTools","store","createStore","ls","localStorage","getItem","JSON","parse","getLocalStorageState","applyMiddleware","thunk","subscribe","setItem","stringify","debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","OkrListName","onChange","onClose","value","debouncedCalueChanged","val","className","defaultValue","evt","target","placeholder","onClick","window","confirm","OkrTaskAdd","onComplete","currentValue","aria-label","role","onKeyPress","charCode","onKeyUp","mapStateToProps","currentlyDraggin","draggin","OkrTask","props","domRef","React","createRef","disabled","changed","debouncedChange","ref","onDoubleClick","elm","currentTarget","focus","readOnly","onBlur","onKeyDown","key","defaultChecked","checked","onWaste","Component","connect","bindActionCreators","OkrAddGroup","onAdd","groupedTasks","onDragEnd","result","destination","draggableId","droppableId","provided","snapshot","droppableProps","innerRef","style","isDraggingOver","background","item","draggableProps","dragHandleProps","updatedTask","newTask","OkrKeyResult","valueChanged","Objective","objective","onObjectiveChange","onKeyResultChange","onAddKeyResult","keyResultJsx","kr","prompt","promptLogin","App","src","logo","alt","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.755e087d.chunk.js","sourcesContent":["import nanoid from 'nanoid';\n\nexport const initialState = {\n    primaryObjective: 'Finish projects & improve skillset',\n    keyResults: [\n        'Complete Math C',\n        'Complete 4 projects',\n        'Get detailed gold trading data for last 5 years'\n    ],\n    taskGroups: [\n        { title: 'Current sprint!', id: 1, sort: 0 },\n        { title: 'Some future sprint!', id: 2, sort: 1 }\n    ],\n    tasks: [\n        // add sort row...\n        { id: nanoid(), sort: 1, title: '[OKR Sys] Add group', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 2, title: '[OKR Sys] Close group', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 3, title: '[OKR Sys] Drag tasks', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 4, title: '[OKR Sys] Drop tasks into different sprint and sort', groupId: 1, status: 0, enabled: false },\n        { id: nanoid(), sort: 5, title: '[OKR Sys] Delete tasks', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 6, title: '[OKR Sys] Add tasks', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 7, title: '[OKR Sys] Basic state', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 8, title: '[OKR Sys] Basic UI', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 9, title: '[OKR Sys] Basic task behavior', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 10, title: '[OKR Sys] Save state to localstorage', groupId: 1, status: 1, enabled: false },\n        { id: nanoid(), sort: 11, title: '[OKR Sys] Deploy to Github page', groupId: 1, status: 1, enabled: false },\n\n        { id: nanoid(), sort: 12, title: 'Sign up for Math C', groupId: 2, status: 0, enabled: false },\n        { id: nanoid(), sort: 13, title: 'Read up on first math module', groupId: 2, status: 0, enabled: false },\n        { id: nanoid(), sort: 14, title: 'GBZ audio wiring', groupId: 2, status: 0, enabled: false },\n        { id: nanoid(), sort: 15, title: 'Gift for the lady', groupId: 2, status: 1, enabled: false },\n\n        { id: nanoid(), sort: 16, title: 'some task ÆØÅ', groupId: undefined, status: 0, enabled: false },\n        { id: nanoid(), sort: 17, title: 'some task ÆØÅ', groupId: undefined, status: 0, enabled: false },\n    ]\n}\n\nexport const okrActions = {\n    updateTask: Symbol('Update task'),\n    addTask: Symbol('Add task'),\n    updatePrimaryObjective: Symbol('Update primary objective'),\n    updateKeyResult: Symbol('Update key result'),\n    updateGroup: Symbol('Update group'),\n    deleteTask: Symbol('Delete task'),\n    deleteGroup: Symbol('Delete group'),\n    addGroup: Symbol('Add group'),\n    updateState: Symbol('update state'),\n    setAll: Symbol('set tasks'),\n}\n\nexport const okr = (state = { ...initialState }, action) => {\n    switch(action.type) {\n        case okrActions.setAll: {\n            return {\n                ...state,\n                ...action.data\n            }\n        }\n\n        case okrActions.updateKeyResult: {\n            const keyResults = [ ...state.keyResults ];\n            keyResults[action.index] = action.keyResult;\n            return {\n                ...state,\n                keyResults\n            }\n        }\n        case okrActions.updateGroup: {\n            const taskGroups = state.taskGroups.map(g => {\n                if (g.id === action.group.id) {\n                    if (action.replace === true) {\n                        return action.group\n                    } else {\n                        return {...g, ...action.group};\n                    }\n                }\n\n                return g;\n            });\n\n            return {\n                ...state,\n                taskGroups\n            }\n        }\n        case okrActions.addGroup: {\n            return {\n                ...state,\n                taskGroups: [\n                    ...state.taskGroups,\n                    {\n                        id: action.group.id ? action.group.id : nanoid(),\n                        ...action.group\n                    }\n                ]\n            }\n        }\n        case okrActions.deleteGroup: {\n            return {\n                ...state,\n                taskGroups: state.taskGroups.filter(g => g.id !== action.id)\n            }\n        }\n        case okrActions.updatePrimaryObjective: {\n            return {\n                ...state,\n                primaryObjective: action.primaryObjective\n            }\n        }\n        case okrActions.deleteTask: {\n            return {\n                ...state,\n                tasks: state.tasks.filter(t => t.id !== action.id)\n            }\n        }\n        case okrActions.updateState: {\n            return {\n                ...state,\n                ...action.state\n            }\n        }\n        case okrActions.updateTask: {\n            const tasks = state.tasks.map(t => {\n                if (t.id === action.task.id) {\n                    if (action.replace === true) {\n                        return action.task\n                    } else {\n                        return {...t, ...action.task};\n                    }\n                }\n\n                return t;\n            });\n\n            return {\n                ...state,\n                tasks\n            }\n        }\n        case okrActions.addTask: {\n            const tasks = [\n                ...state.tasks,\n                {\n                    groupId: undefined,\n                    status: 0,\n                    ...action.task,\n                    id: action.task.id ? action.task.id : nanoid(),\n                    sort: state.tasks.reduce((acc,curr)=> curr.sort > acc ? curr.sort:acc, 0)+1\n                }\n            ];\n\n            return {\n                ...state,\n                tasks\n            }\n        }\n        default:{\n            return state;\n        }\n    }\n}","export const authActions = {\n    UPDATE: Symbol('update')\n}\n\nexport function login(username, password) {\n    return async (dispatch, getState) => {\n        const req = await fetch('https://strapi.sebb.dk/auth/local', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: `identifier=${username}&password=${password}`\n        });\n\n        const res = await req.json();\n\n        dispatch({\n            type: authActions.UPDATE,\n            data: {\n                ...res\n            }\n        });\n    }\n}\n\nexport const initialState = {}\n\nexport const auth = (state = { ...initialState }, action) => {\n    switch(action.type) {\n        case authActions.UPDATE: {\n            return {\n                ...state,\n                ...action.data\n            };\n        }\n        default:\n            return state;\n    }\n\n}","import nanoid from 'nanoid';\nimport { okrActions } from \"./okr\";\n\nexport const serialize = function(obj) {\n    var str = [];\n    for (var p in obj)\n      if (obj.hasOwnProperty(p)) {\n        str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(obj[p]));\n      }\n    return str.join(\"&\");\n  }\n\nexport function updateTask(rawTask, replace = false) {\n    return async (dispatch, getState) => {\n        const originalTask = getState().okr.tasks.filter(t => t.id === rawTask.id);\n        const defaultFields = {status: 0, sort: 0, title:'', user: getState().auth.user._id}\n        const saveTask = { ...defaultFields, ...rawTask, okrtaskgroup: rawTask.groupId, __v: 0, id: \"5d6994b3f236585b2605158f\" };\n\n        if(saveTask.okrtaskgroup === undefined || saveTask.okrtaskgroup === -1) {\n            delete saveTask.okrtaskgroup\n        }\n\n        const task = {\n            id: rawTask.id,\n            title: rawTask.title,\n            status: rawTask.status,\n            sort: rawTask.sort,\n            groupId: rawTask.groupId\n        }\n\n        dispatch({ type: okrActions.updateTask, task, replace });\n\n        const req = await fetch(`https://strapi.sebb.dk/okrtasks/${rawTask.id}`, {\n            method: 'put',\n            headers: {\n                'Authorization': 'Bearer ' + getState().auth.jwt,\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: serialize(saveTask)\n        });\n\n        if (req.status !== 200) {\n            dispatch({ type: okrActions.updateTask, task: originalTask, replace: true });\n            console.error('Update task failed', req)\n        }\n    }\n}\n\nexport function addTask(rawTask) {\n    return async (dispatch, getState) => {\n        const sort = getState().okr.tasks.reduce((acc, curr) => {\n                return curr.sort > acc ? curr.sort : acc;\n        }, 0) + 1;\n        const defaultFields = { order: 0, status: 0, title:'', sort: 0, user: getState().auth.user._id };\n        const saveTask = { ...defaultFields, ...rawTask, okrtaskgroup: rawTask.groupId, sort };\n\n        const tempTask = {  ...saveTask, id: nanoid() }\n\n        dispatch({ type: okrActions.addTask, task: tempTask });\n\n        delete saveTask.groupId\n        if(saveTask.okrtaskgroup === undefined || saveTask.okrtaskgroup === -1) {\n            delete saveTask.okrtaskgroup\n        }\n\n        const req = await fetch('https://strapi.sebb.dk/okrtasks', {\n            method: 'post',\n            headers: {\n                'Authorization': 'Bearer ' + getState().auth.jwt,\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: serialize(saveTask)\n        });\n\n        const resTask = await req.json();\n        const task = {\n            id: resTask.id,\n            title: resTask.title,\n            status: resTask.status,\n            groupId: resTask.okrtaskgroup ? resTask.okrtaskgroup.id : undefined,\n            sort\n        }\n\n        if (req.status === 200) {\n            dispatch({ type: okrActions.deleteTask, id: tempTask.id });\n            dispatch({ type: okrActions.addTask, task });\n        } else {\n            console.error('Update task failed', req)\n        }\n    }\n}\n\nexport function updateObjective(primaryObjective) {\n    return { type: okrActions.updatePrimaryObjective, primaryObjective };\n}\n\nexport function updateKeyResult(keyResult, index) {\n    return { type: okrActions.updateKeyResult, keyResult, index };\n}\n\nexport function moveTaskTo(taskId, index, groupId) {\n    groupId = groupId !== -1 ? groupId:undefined;\n\n    return async (dispatch, getState) => {\n        const state = getState();\n        const tasks = state.okr.tasks\n            .filter(t => t.groupId === groupId)\n            .filter(t => t.id !== taskId)\n            .sort((t1,t2) => t1.sort < t2.sort ? -1 : 1);\n\n\n        const task = state.okr.tasks.find(t => t.id === taskId);\n\n        tasks.splice(index, 0, task)\n        const beforeVal = tasks[index-1] ? tasks[index-1].sort : tasks[0].sort-1;\n        const afterVal  = tasks[index+1] ? tasks[index+1].sort : tasks[tasks.length-1].sort+1;\n\n        const sort = beforeVal + ((afterVal - beforeVal) / 2);\n\n        updateTask({\n            ...task,\n            sort,\n            groupId\n        })(dispatch, getState);\n    }\n}\n\nexport function updateListName(title, id) {\n    return (dispatch, getState) => {\n        updateGroup({ id, title })(dispatch, getState);\n    }\n}\n\nexport function deleteTask(id) {\n    return async (dispatch, getState) => {\n        const tempTask = getState().okr.tasks.find(t => t.id === id);\n        dispatch({ type: okrActions.deleteTask, id });\n\n        const req = await fetch(`https://strapi.sebb.dk/okrtasks/${id}`, {\n            method: 'delete',\n            headers: { 'Authorization': 'Bearer ' + getState().auth.jwt, }\n        });\n\n        if (req.status !== 200) {\n            dispatch({ type: okrActions.addTask, task: tempTask });\n            console.error('Update task failed', req)\n        }\n    }\n}\n\nexport function addGroupBefore(rawGroup, beforeId) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        let sort = 0;\n \n        // Figure out sort value\n        const beforeGroup = state.okr.taskGroups.find(g => g.id === beforeId);\n        if(beforeGroup !== undefined) {\n            const groups = state.okr.taskGroups.filter(g => !g.deleted);\n            const beforeGroupIndex = groups.indexOf(beforeGroup);\n            const postVal = beforeGroup.sort;\n            const prevVal = groups[beforeGroupIndex-1] ? groups[beforeGroupIndex-1].sort : postVal-1;\n            sort = prevVal + ((postVal - prevVal) / 2);\n        }\n\n        const saveGroup = { ...rawGroup, sort, user: getState().auth.user._id };\n        const tempGroup = {  ...saveGroup, id: nanoid() }\n\n        dispatch({ type: okrActions.addGroup, group: tempGroup });\n\n        const req = await fetch('https://strapi.sebb.dk/okrtaskgroups', {\n            method: 'post',\n            headers: {\n                'Authorization': 'Bearer ' + getState().auth.jwt,\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: serialize(saveGroup)\n        });\n\n        const resGroup = await req.json();\n        const group = {\n            id: resGroup.id,\n            title: resGroup.title,\n            sort: resGroup.sort\n        }\n\n        if (req.status === 200) {\n            dispatch({ type: okrActions.deleteGroup, id: tempGroup.id });\n            dispatch({ type: okrActions.addGroup, group });\n        } else {\n            console.error('add group failed', req)\n        }\n    }\n}\n\nexport function closeGroup(id) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const group = { ...state.okr.taskGroups.find(g => g.id === id), deleted: true };\n        updateGroup(group)(dispatch, getState);\n    }\n}\n\nexport function updateGroup(group) {\n    return async (dispatch, getState) => {\n        const state = getState();\n        const originalGroup = state.okr.taskGroups.find(g => g.id === group.id);\n\n        dispatch({ type: okrActions.updateGroup, group})\n\n        const req = await fetch(`https://strapi.sebb.dk/okrtaskgroups/${group.id}`, {\n            method: 'put',\n            headers: {\n                'Authorization': 'Bearer ' + state.auth.jwt,\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: serialize(group)\n        });\n\n        if (req.status !== 200) {\n            dispatch({ type: okrActions.updateGroup, group: originalGroup, replace: true})\n            console.error('add group failed', req);\n            return false;\n        }\n\n        return true;\n    }\n}\n\nexport function updateState(state) {\n    return { type: okrActions.updateState, state};\n}\n\nexport function synchronize() {\n    return async (dispatch, getState) => {\n        const req = await fetch('https://strapi.sebb.dk/users/me', {\n            method: 'get',\n            headers: {\n                'Authorization': 'Bearer ' + getState().auth.jwt\n            }\n        });\n\n        const res = await req.json();\n\n        const tasks = res.okrtasks.map(i => ({\n            id: i._id,\n            title: i.title,\n            groupId: i.okrtaskgroup,\n            status: i.status,\n            sort: i.sort\n        }));\n\n        const taskGroups = res.okrtaskgroups.filter(g => !g.deleted).map(i => ({\n            id: i._id,\n            title: i.title,\n            deleted: i.deleted,\n            sort: i.sort\n        }));\n\n        dispatch({ type: okrActions.setAll, data: { tasks, taskGroups } });\n    }\n}\n\nexport function synchronizeIfAuthenticated() {\n    return async (dispatch, getState) => {\n        if(getState().auth.user) {\n            synchronize()(dispatch, getState);\n        }\n    }\n}\n\nexport const getGroupedTasks = (state) => {\n    const groups = state.okr.taskGroups\n        .filter(g => g.deleted !== true)\n        .map((group) => {\n            const tasks = state.okr.tasks\n                .filter(task => task.groupId === group.id)\n                .sort((ta, tb) => ta.sort > tb.sort ? 1:-1 );\n            return { ...group,  tasks}\n        });\n\n    const deletedGroupIds = state.okr.taskGroups.filter(g => g.deleted === true).map(g => g.id);\n\n    const backlogTasks = state.okr.tasks\n        .filter(t => t.groupId === undefined || deletedGroupIds.indexOf(t.groupId) > -1)\n        .sort((ta, tb) => ta.sort > tb.sort ? 1 : -1 );\n\n    groups.push({ title: 'Backlog tasks', tasks: backlogTasks })\n\n    return groups.sort((g1, g2) => g1.sort < g2.sort ? -1 : 1);\n}","import { combineReducers, createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { okr } from './okr';\nimport { auth } from './auth';\nimport { synchronizeIfAuthenticated } from './okr.actions';\n\nexport const rootReducer = combineReducers({\n    okr,\n    auth\n})\n\nconst composeEnhancers = composeWithDevTools({\n    serialize: true\n});\n\nfunction getLocalStorageState() {\n    const ls = localStorage.getItem('okr');\n    return ls ? JSON.parse(ls) : {};\n}\n\nexport const store = createStore(rootReducer, getLocalStorageState(), composeEnhancers(\n    applyMiddleware(thunk),\n    // other store enhancers if any\n));\n\nstore.subscribe(state => {\n    localStorage.setItem('okr', JSON.stringify(store.getState()));\n});\n\nstore.dispatch(synchronizeIfAuthenticated());\n","export function debounce(func, wait, immediate) {\n\tvar timeout;\n\treturn function() {\n\t\tvar context = this, args = arguments;\n\t\tvar later = function() {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) func.apply(context, args);\n\t\t};\n\t\tvar callNow = immediate && !timeout;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t\tif (callNow) func.apply(context, args);\n\t};\n};","import React from 'react'\nimport { debounce } from '../../../lib/debounce';\n\nconst OkrListName = ({ onChange, onClose, value }) => {\n  const debouncedCalueChanged = debounce((val) => {\n    onChange && onChange(val);\n  }, 500);\n\n  function add() {\n    if(window.confirm(\"Are you sure?\")) {\n      onClose();\n    }\n  }\n\n  return (\n    <div className=\"okr-list-name\">\n        <input type=\"text\" defaultValue={value} onChange={evt => debouncedCalueChanged(evt.target.value)} placeholder=\"List name\" />\n        <button onClick={add}>Close group</button>\n    </div>\n  )\n}\n\nexport default OkrListName","import React from 'react'\n\nconst OkrTaskAdd = ({ onComplete, groupId = undefined }) => {\n  const defaultValue = { title: '', groupId };\n  let currentValue = { ...defaultValue };\n\n  function changed(val) {\n    currentValue = {\n      ...currentValue,\n      ...val\n    };\n  }\n\n  function onKeyUp(evt) {\n    if (evt.charCode === 13) { // enter\n      onComplete && onComplete(currentValue);\n      evt.target.value = '';\n    }\n  }\n\n  return (\n    <div className=\"okr-task okr-task--add\">\n        <span className=\"okr-task__type\" aria-label=\"cat\" role=\"img\">T</span>\n        <input\n          type=\"text\"\n          placeholder=\"Add a new task...\"\n          defaultValue={currentValue.title}\n          onChange={evt => changed({title: evt.target.value})}\n          onKeyPress={evt => onKeyUp(evt)}/>\n    </div>\n  );\n}\n\nexport default OkrTaskAdd","import React from 'react'\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { updateState, moveTaskTo } from '../../../store/okr.actions';\nimport { debounce } from '../../../lib/debounce';\n\nfunction mapStateToProps(state) {\n\treturn {\n    currentlyDraggin: state.okr.draggin\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({\n    updateState,\n    moveTaskTo\n\t}, dispatch);\n}\n\nclass OkrTask extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.domRef = React.createRef();\n  }\n\n  render() {\n    const disabled = this.props.disabled;\n    let currentValue = { ...this.props.task };\n  \n    const changed = (val = {}) => {\n\n      currentValue = {\n        ...currentValue,\n        ...val\n      };\n\n      this.props.onChange && this.props.onChange(currentValue);\n    }\n\n    const debouncedChange = debounce(changed, 500);\n\n    const onKeyUp = (evt) => {\n      if ([\"Escape\"].indexOf(evt.key) > -1) { // enter, escape\n        changed({ disabled: true });\n      }\n\n      if ([\"Enter\"].indexOf(evt.key) > -1) { // enter, escape\n        changed({ disabled: !disabled });\n      }\n    }\n\n    const onDoupleClick = (evt) => {\n      const elm = evt.currentTarget;\n      changed({ disabled: false });\n      setTimeout(() => {\n        elm.focus();\n      }, 50);\n    }\n\n    const waste = () => {\n      if(window.confirm(\"Are you sure?\")) {\n        this.props.onWaste(this.props.task.id)\n      }\n    }\n\n    let className = 'okr-task';\n    if (currentValue.status === 1) {\n      className += ' okr-task--done';\n    }\n\n    if (!disabled) {\n      className += ' okr-task--active';\n    }\n\n    return (\n      <div className={className} ref={this.domRef} >\n        <div className=\"okr-task__dragger\">\n          <span className=\"okr-task__type\" aria-label=\"cat\" role=\"img\">T</span>\n            <input\n              type=\"text\"\n              onDoubleClick={onDoupleClick}\n              readOnly={disabled}\n              onBlur={evt => changed({ disabled: true })}\n              onKeyDown={onKeyUp}\n              placeholder=\"Something to do...\"\n              defaultValue={currentValue.title}\n              onChange={evt => debouncedChange({ title: evt.target.value })} />\n            <input\n              type=\"checkbox\"\n              defaultChecked={currentValue.status === 1}\n              onChange={evt => changed({ status: evt.target.checked ? 1 : 0 })}\n              />\n            <span className=\"okr-task__deletebtn\" onClick={waste}>&#x1F5D1;</span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(() => mapStateToProps, mapDispatchToProps)(OkrTask);","import React from 'react'\n\nconst OkrAddGroup = ({ onAdd, groupId }) => {\n  return (\n    <div className=\"okr-add-group\">\n        <button onClick={() => onAdd(groupId)}>Add group here</button>\n    </div>\n  )\n}\n\nexport default OkrAddGroup","import React from \"react\";\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport { getGroupedTasks } from \"../../../store/okr.actions\";\n\nimport OkrListName from './list-name';\nimport OkrTaskAdd from './task-add';\nimport OkrTask from './task';\nimport OkrAddGroup from './add-group';\n\nimport { updateTask, addTask, updateListName, deleteTask, addGroupBefore, closeGroup, moveTaskTo } from '../../../store/okr.actions';\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tgroupedTasks: getGroupedTasks(state),\n\t};\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({\n        updateTask,\n        addTask,\n        updateListName,\n        deleteTask,\n        addGroupBefore,\n        closeGroup,\n        moveTaskTo\n\t}, dispatch);\n}\n\nconst getListStyle = isDraggingOver => ({\n    background: isDraggingOver ? \"lightblue\" : \"grey\"\n\n});\n\nexport const GroupedProps = ({groupedTasks, updateTask, addTask, updateListName, deleteTask, addGroupBefore, closeGroup, moveTaskTo}) => {\n    const onDragEnd = (result) => {\n        if (!result.destination) {\n            return;\n        }\n\n        moveTaskTo(result.draggableId, result.destination.index, result.destination.droppableId)\n    }\n\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n        {groupedTasks.map((group, index) => {\n            return (\n                <div className=\"okr-task-list\" key={group.id || -1}>\n                    <OkrAddGroup onAdd={() => addGroupBefore({title: 'New Group'}, group.id)}></OkrAddGroup>\n                    <OkrListName value={group.title} onChange={title => updateListName(title, group.id)} onClose={() => closeGroup(group.id)}></OkrListName>\n                    <Droppable droppableId={group.id || -1}>\n                    {(provided, snapshot) => (\n                        <div {...provided.droppableProps} ref={provided.innerRef} style={getListStyle(snapshot.isDraggingOver)}>\n                            {group.tasks.map((item, index) => (\n                                <Draggable key={item.id} draggableId={item.id} index={index}>\n                                    {(provided, snapshot) => (\n                                        <div\n                                        ref={provided.innerRef}\n                                        {...provided.draggableProps}\n                                        {...provided.dragHandleProps}>\n                                            <OkrTask\n                                                task={item}\n                                                onWaste={id => deleteTask(id)}\n                                                key={item.id}\n                                                disabled={item.disabled}\n                                                onChange={updatedTask => updateTask(updatedTask)}>\n                                            </OkrTask>\n                                        </div>\n                                    )}\n                                </Draggable>\n                            ))}\n                            {provided.placeholder}\n                        </div>\n                    )}\n                    </Droppable>\n                    <OkrTaskAdd groupId={group.id} onComplete={newTask => addTask(newTask)}></OkrTaskAdd>\n                </div>\n            )\n        })}\n        </DragDropContext>\n    );\n};\n\nexport default connect(() => mapStateToProps, mapDispatchToProps)(GroupedProps);","import React from 'react'\n\nconst OkrKeyResult = ({ value, onChange }) => {\n  function valueChanged(val) {\n    onChange && onChange(val);\n  }\n\n  return (\n    <div className=\"okr-key-result\">\n        <input type=\"text\" defaultValue={value} onChange={evt => valueChanged(evt.target.value)} placeholder=\"A key result...\" />\n    </div>\n  )\n}\n\nexport default OkrKeyResult","import React from 'react'\nimport OkrKeyResult from './key-result';\n\nconst Objective = ({keyResults = [], objective = '', onObjectiveChange, onAddKeyResult, onKeyResultChange }) => {\n  const keyResultJsx = keyResults.map((kr, i) => {\n    return <OkrKeyResult key={i} value={kr} onChange={val => onKeyResultChange(val, i)}></OkrKeyResult>;\n  });\n\n  function objectiveChanged(val) {\n    onObjectiveChange && onObjectiveChange(val);\n  }\n\n  return (\n    <div className=\"okr-objective\">\n        <textarea\n          type=\"text\"\n          className=\"okr-primary-objective\"\n          defaultValue={objective}\n          onChange={evt => objectiveChanged(evt.target.value)}\n          placeholder=\"Okr primary goal\"></textarea>\n        {keyResultJsx}\n    </div>\n  )\n}\n\nexport default Objective","import React from \"react\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport './styles.css';\n\nimport { getGroupedTasks, updateObjective, updateKeyResult, synchronize } from '../../store/okr.actions';\nimport { login } from '../../store/auth';\n\nimport GroupedProps from './parts/grouped-props';\nimport Objective from './parts/objective';\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tgroupedTasks: getGroupedTasks(state),\n\t\tobjective: state.okr.primaryObjective,\n\t\tkeyResults: state.okr.keyResults,\n\t};\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn bindActionCreators({\n\t\tupdateObjective,\n\t\tupdateKeyResult,\n\t\tlogin,\n\t\tsynchronize\n\t}, dispatch);\n}\n\nconst Okr = ({ keyResults, objective, updateObjective, updateKeyResult, login, synchronize }) => {\n\tfunction promptLogin() {\n\t\tconst username = prompt('What is your username?');\n\t\tconst password = prompt('What is your password?');\n\n\t\tlogin(username, password);\n\t}\n\n\treturn (\n\t\t<div className=\"okr-page\">\n\t\t\t<div className=\"okr-page__content\">\n\t\t\t\t<br />\n\t\t\t\t<button onClick={() => promptLogin()}>Login</button>\n\t\t\t\t<button onClick={() => synchronize()}>Get data</button>\n\t\t\t\t<Objective\n\t\t\t\t\tkeyResults={keyResults}\n\t\t\t\t\tobjective={objective}\n\t\t\t\t\tonKeyResultChange={(val, i) => updateKeyResult(val, i)}\n\t\t\t\t\tonObjectiveChange={val => updateObjective(val)}>\n\t\t\t\t</Objective>\n\t\t\t\t<GroupedProps></GroupedProps>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default connect(() => mapStateToProps, mapDispatchToProps)(Okr);","import React from 'react';\nimport { Provider } from 'react-redux'\n\nimport logo from './logo.svg';\nimport { store } from './store'\nimport './App.css';\nimport Okr from './components/okr';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n\n        <Okr></Okr>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}